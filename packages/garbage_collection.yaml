automation:
  - id: 'powiadomnie o smieciach'
    alias: Powiadomienie o śmieciach
    description: 'Powiadomienie o śmieciach'
    trigger:
    - platform: time
      at: '19:00'
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.smieci_bio
            state: 'smieci bio jutro'
          - condition: state
            entity_id: sensor.smieci_zmieszane
            state: 'smieci zmieszane jutro'
          - condition: state
            entity_id: sensor.smieci_segregowane
            state: 'smieci segregowane jutro'
    action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.garbage_reminder
    - alias: "Powiadamiaj dopóki śmieci nie wyniesione"
      repeat:
        while:
          - condition: state
            entity_id: input_boolean.garbage_reminder
            state: "on"
        sequence:
          - service: logbook.log
            data:
              name: Powiadomienie o śmieciach
              message: Powiadomienie wysłane
              entity_id: input_boolean.garbage_reminder
          - service: tts.google_cloud_say
            data:
              entity_id: media_player.nest_mini
              message:
                Trzeba wystawić
                {% set garbage = states.calendar | selectattr('entity_id', 'search', 'smieci') | selectattr('attributes.start_time','defined') | list %}

                {% for sensor in garbage if (sensor.attributes.start_time | as_datetime | as_local - today_at()).days == 1 -%}
                  {% if not loop.first %}{% if not loop.last %}, {% else %} i {% endif %}{% endif %}{{ sensor.attributes.message | lower }}
                {%- endfor %}
          - service: notify.anarion_iwona_phones
            data:
              message:
                Trzeba wystawić
                {% set garbage = states.calendar | selectattr('entity_id', 'search', 'smieci') | selectattr('attributes.start_time','defined') | list %}

                {% for sensor in garbage if (sensor.attributes.start_time | as_datetime | as_local - today_at()).days == 1 -%}
                  {% if not loop.first %}{% if not loop.last %}, {% else %} i {% endif %}{% endif %}{{ sensor.attributes.message | lower }}
                {%- endfor %}
              data:
                actions:
                  - title: "Śmieci wystawione"
                    action: "wystawione"
                tag: input_boolean.garbage_reminder
          - wait_for_trigger:
              - platform: event
                event_type: mobile_app_notification_action
                event_data:
                  action: "wystawione"
              - platform: state
                entity_id: input_boolean.garbage_reminder
                to: "off"
            timeout:
              minutes: 30
          - choose:
              - conditions: "{{ wait.trigger.event.data.action == 'wystawione' }}"
                sequence:
                  - service: input_boolean.turn_off
                    target:
                      entity_id: input_boolean.garbage_reminder
                  - service: logbook.log
                    data:
                      name: "Śmieci wystawione"
                      message: "Śmieci wystawione"
                      entity_id: input_boolean.garbage_reminder
            default:
              - service: notify.anarion_iwona_phones
                data:
                  message: "clear_notification"
                  data:
                    tag: input_boolean.garbage_reminder
              - service: logbook.log
                data:
                  name: "Śmieci wystawione"
                  message: "Śmieci wystawione"
                  entity_id: input_boolean.garbage_reminder

group:
  smieci:
    entities:
      - sensor.smieci_bio
      - sensor.zmieszane
      - sensor.smieci_segregowane

input_boolean:
  garbage_reminder:
    name: Przypomnienie o śmieciach
    icon: mdi:trash-can

template:
- trigger:
  - platform: calendar
    event: start
    entity_id: calendar.smieci_bio
    offset: -24:00:00
    id: "smieci bio jutro"
  - platform: calendar
    event: start
    entity_id: calendar.smieci_bio
    id: "smieci bio dzisiaj"
  - platform: calendar
    event: end
    entity_id: calendar.smieci_bio
    id: "off"
  sensor:
    - name: Śmieci BIO
      state: "{{ trigger.id }}"
      icon: mdi:trash-can

- trigger:
  - platform: calendar
    event: start
    entity_id: calendar.smieci_zmieszane
    offset: -24:00:00
    id: "smieci zmieszane jutro"
  - platform: calendar
    event: start
    entity_id: calendar.smieci_zmieszane
    id: "smieci zmieszane dzisiaj"
  - platform: calendar
    event: end
    entity_id: calendar.smieci_zmieszane
    id: "off"
  sensor:
    - name: Śmieci zmieszane
      state: "{{ trigger.id }}"
      icon: mdi:trash-can

- trigger:
  - platform: calendar
    event: start
    entity_id: calendar.smieci_segregowane
    offset: -24:00:00
    id: "smieci segregowane jutro"
  - platform: calendar
    event: start
    entity_id: calendar.smieci_segregowane
    id: "smieci segregowane dzisiaj"
  - platform: calendar
    event: end
    entity_id: calendar.smieci_segregowane
    id: "off"
  sensor:
    - name: Śmieci segregowane
      state: "{{ trigger.id }}"
      icon: mdi:trash-can