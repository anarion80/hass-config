alarm_control_panel:
  - platform: manual
    name: GÅ‚Ã³wny alarm
    code: !secret main_alarm_code
    arming_time: 30
    delay_time: 20
    trigger_time: 4
    disarmed:
      trigger_time: 0
    armed_home:
      arming_time: 0
      delay_time: 0
      trigger_time: 60
    armed_away:
      delay_time: 60
      trigger_time: 60

automation:
  # - id: '1617367166600'
  #   alias: Motion Detected
  #   description: ''
  #   use_blueprint:
  #     path: vorion/send-camera-snapshot-notification-on-motion.yaml
  #     input:
  #       notification_message: '{{ motion_sensor_name }} - wykryto ruch!'
  #       motion_sensor: binary_sensor.camera1_motion
  #       camera: camera.camera1
  #       notify_device: b0c171c0e7c87b51e2a35c49fd79e5ff
  #       notification_title: Wykryto ruch!
  #       delay: 2

  - id: '1617387394300'
    alias: Frigate person detection notification
    description: ''
    trace:
      stored_traces: 10
    trigger:
    - platform: mqtt
      topic: frigate/events
    condition:
      - condition: state
        entity_id: person.anarion
        state: "not_home"
    action:
    - service: notify.mobile_app_nokia_8_3_5g
      data_template:
        message: '{{trigger.payload_json["after"]["label"]}} wykryty w {{trigger.payload_json["after"]["camera"]}}'
        data:
          image: https://ha.anarion.pl/api/frigate/frigate/notifications/{{trigger.payload_json['after']['id']}}/snapshot.jpg
          tag: '{{trigger.payload_json["after"]["id"]}}'
          when: '{{trigger.payload_json["after"]["start_time"]|int}}'
          data:
            ttl: 0
            priority: high
    mode: single

  - id: '1617387394301'
    alias: Frigate person detection notification - popup
    description: 'Frigate person detection notification - popup'
    trigger:
    - platform: mqtt
      topic: frigate/events
    action:
      - service: light.turn_on
        data:
          entity_id: light.fire_tablet_screen
          brightness_pct: >
            {{ is_state('sun.sun', 'above_horizon') | iif(90, 65) }}
      - service: browser_mod.more_info
        data:
          entity_id: >
            camera.{{trigger.payload_json["after"]["camera"]}}_2
          browser_id:
            - amazon_tablet
      - delay:
          minutes: 1
      - service: browser_mod.close_popup
        data:
          browser_id: amazon_tablet
      - service: light.turn_off
        data:
          entity_id: light.fire_tablet_screen
    mode: restart

  - id: '1618433673900'
    alias: Notify on device unavailable
    description: ''
    trigger:
    - platform: state
      entity_id:
      - binary_sensor.alarm_keypad_contact
      - binary_sensor.drzwi_do_ogrodu_contact
      - binary_sensor.drzwi_wejsciowe_contact
      - binary_sensor.motion_sensor_1_battery_low
      - switch.server_power
      to: unavailable
      for: 0:05:00
    condition: []
    action:
    - service: notify.mobile_app_nokia_8_3_5g
      data:
        title: UrzÄ…dzenie niedostÄ™pne!
        data:
          channel: Notfall
          priority: high
          ttl: 0
          color: red
        message: ðŸ“µ {{ state_attr(trigger.to_state.entity_id, 'friendly_name') }} jest niedostÄ™pne od 5 minut!
    mode: parallel
    max: 10

  - id: trigger_alarm_while_armed
    alias: Trigger alarm while armed
    trigger:
    - platform: state
      entity_id: group.all_door_sensors
      to: 'on'
    - platform: state
      entity_id: group.all_motion_detectors
      to: 'on'
    condition:
    - condition: or
      conditions:
      - condition: state
        entity_id: alarm_control_panel.glowny_alarm
        state: armed_away
      - condition: state
        entity_id: alarm_control_panel.glowny_alarm
        state: armed_home
    action:
    - service: alarm_control_panel.alarm_trigger
      target:
        entity_id: alarm_control_panel.glowny_alarm
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm zostaÅ‚ wyzwolony! Wpisz poprawny kod!
        entity_id: media_player.nest_mini
    - service: light.turn_on
      data:
        entity_id: light.fire_tablet_screen
        brightness_pct: '{{ 90 if is_state(''sun.sun'', ''above_horizon'') else 60 }}'
    mode: single
  - id: send_notification_when_alarm_is_disarmed
    alias: Send notification when alarm is disarmed
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: disarmed
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm zostaÅ‚ rozbrojony!
        entity_id: media_player.nest_mini
  - id: send_notification_when_alarm_is_in_pending_status
    alias: Send notification when alarm is in pending status
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: pending
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm siÄ™ wÅ‚Ä…cza! Wpisz poprawny kod!
        entity_id: media_player.nest_mini
    - service: light.turn_on
      data:
        entity_id: light.fire_tablet_screen
        brightness_pct: '{{ 90 if is_state(''sun.sun'', ''above_horizon'') else 60 }}'
  - id: send_notification_when_alarm_is_armed_in_away_mode
    alias: Send notification when alarm is armed in away mode
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_away
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm uzbrojony!
        entity_id: media_player.nest_mini
  - id: send_notification_when_alarm_is_armed_in_home_mode
    alias: Send notification when alarm is armed in home mode
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_home
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm uzbrojony!
        entity_id: media_player.nest_mini
  - id: send_notification_when_alarm_is_triggered
    alias: Send notification when alarm is triggered
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: triggered
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm zostaÅ‚ faktycznie wyzwolony!
        entity_id: media_player.nest_mini
    - service: notify.mobile_app_nokia_8_3_5g
      data:
        message: 'Uwaga: Alarm w domu zostaÅ‚ wyzwolony - {{ states(''sensor.date_time'')
          }}!'
        data:
          ttl: 0
          priority: high
    - service: light.turn_on
      data:
        entity_id: light.fire_tablet_screen
        brightness_pct: '{{ 90 if is_state(''sun.sun'', ''above_horizon'') else 60 }}'

  - id: 'sync_alarm_status'
    alias: sync_alarm_status
    description: Synchronize alarm status with keypad
    variables:
      pin_var: !secret main_alarm_code
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: arming
      id: panel_arming
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_home
      id: panel_armed_home
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: disarmed
      id: panel_disarmed
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_away
      id: panel_armed_away
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: pending
      id: panel_pending
    - platform: mqtt
      topic: zigbee2mqtt/alarm_keypad
      id: keypad_mqtt
    condition: []
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: panel_arming
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: alarm_control_panel.glowny_alarm
              state: armed_home
              attribute: next_state
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n  }\n\
                  }"
          - conditions:
            - condition: state
              entity_id: alarm_control_panel.glowny_alarm
              state: armed_away
              attribute: next_state
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"exit_delay\"\n  }\n}"
          default: []
        # - choose:
        #   default: !input 'action_arming'
      - conditions:
        - condition: trigger
          id: panel_armed_away
        sequence:
        - service: mqtt.publish
          data_template:
            topic: zigbee2mqtt/alarm_keypad/set
            payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n  }\n}"
        # - choose:
        #   default: !input 'action_armed_away'
      - conditions:
        - condition: trigger
          id: panel_disarmed
        sequence:
        - service: mqtt.publish
          data_template:
            topic: zigbee2mqtt/alarm_keypad/set
            payload: "{\n \"arm_mode\": \n  {\n    \"mode\": \"disarm\"\n  }\n}"
        # - choose:
        #   default: send_notification_when_alarm_is_disarmed
      - conditions:
        - condition: trigger
          id: panel_armed_home
        sequence:
        - service: mqtt.publish
          data_template:
            topic: zigbee2mqtt/alarm_keypad/set
            payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n  }\n}"
        # - choose:
        #   default: send_notification_when_alarm_is_armed_in_home_mode
      - conditions:
        - condition: trigger
          id: panel_pending
        sequence:
        # - choose:
        #   default: send_notification_when_alarm_is_in_pending_status
      - conditions:
        - condition: trigger
          id: keypad_mqtt
        sequence:
        - choose:
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_transaction != null and
                trigger.payload_json.action_code == pin_var }}'
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n    \"transaction\": \"{{ trigger.payload_json.action_transaction\
                  \ }}\",\n    \"mode\": \"{{ trigger.payload_json.action }}\"\n  }\n}"
        - choose:
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
                == "arm_all_zones" }}'
            sequence:
            - service: alarm_control_panel.alarm_arm_away
              target:
                entity_id: alarm_control_panel.glowny_alarm
              data:
                code: !secret main_alarm_code
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
                == "arm_day_zones" }}'
            sequence:
            - service: alarm_control_panel.alarm_arm_home
              target:
                entity_id: alarm_control_panel.glowny_alarm
              data:
                code: !secret main_alarm_code
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
                == "disarm" }}'
            sequence:
            - service: alarm_control_panel.alarm_disarm
              target:
                entity_id: alarm_control_panel.glowny_alarm
              data:
                code: !secret main_alarm_code
          # - conditions:
          #   - condition: template
          #     value_template: '{{ trigger.payload_json.action == "panic" }}'
          #   sequence:
          #   - choose:
          #     default: !input 'action_panic'
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code != pin_var and trigger.payload_json.action_code
                | int(-1) != -1 }}'
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n   \"transaction\": \"{{ trigger.payload_json.action_transaction\
                  \ }}\",\n   \"mode\": \"invalid_code\"\n  }\n}"
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action == None }}'
            sequence:
            - choose:
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_away
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n\
                      \  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_home
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n\
                      \  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: disarmed
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"disarm\"\n  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: arming
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_home
                  attribute: next_state
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n\
                      \  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: arming
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_away
                  attribute: next_state
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n\
                      \  }\n}"
          default: []
      default: []
    mode: parallel
    max: 10

group:
  all_motion_detectors:
    entities:
      - binary_sensor.alarm_keypad_occupancy
      - binary_sensor.motion_sensor_1_occupancy

  all_door_sensors:
    entities:
      - binary_sensor.drzwi_do_ogrodu_contact
      - binary_sensor.drzwi_wejsciowe_contact

sensor:
  - platform: template
    sensors:
      alarm_status:
        friendly_name: Status alarmu
        value_template: >-
          {%- if (states('alarm_control_panel.glowny_alarm') == "disarmed") -%} rozbrojony
          {%- elif (states('alarm_control_panel.glowny_alarm') == "arming") -%} uzbrajanie
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_home") -%} w domu
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_away") -%} poza domem
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_night") -%} nocny
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_custom_bypass") -%} custom
          {%- elif (states('alarm_control_panel.glowny_alarm') == "pending") -%} w trakcie
          {%- elif (states('alarm_control_panel.glowny_alarm') == "triggered") -%} wyzwolony
          {%- endif %}

script:
  release_the_dog_2:
    alias: Release the dog 2
    sequence:
      - repeat:
          count: '10'
          sequence:
          - service: media_player.play_media
            target:
              entity_id: media_player.nest_mini
            data:
              media_content_id: /local/mixkit-annoyed-big-dog-barking-51.wav
              media_content_type: music
          - service: media_player.play_media
            target:
              entity_id: media_player.nest_mini
            data:
              media_content_id: /local/mixkit-giant-dog-aggressive-growl-59.wav
              media_content_type: music
    mode: queued