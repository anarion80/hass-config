sensor:
  - platform: time_date
    display_options:
      - 'date_time'
      - 'date'
      - 'time'

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: '/'
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      - type: swap_use_percent
    scan_interval: 120



    ####################################################
    #                                                  #
    #                     SENSOR                       #
    #                                                  #
    ####################################################

  # - platform: version
  #   name: hass_version_installed
  #   source: local

  # - platform: version
  #   name: hass_version_latest
  #   source: container

  # - platform: version
  #   name: hass_version_latest_beta
  #   beta: true
  #   source: container

  - platform: filesize
    file_paths:
      - /config/home-assistant.log
    scan_interval: 1800

  - platform: filesize
    file_paths:
      - /config/home-assistant_v2.db
    scan_interval: 1800

  # - platform: sql
    # db_url: !secret recorder_db_url
    # queries:
      # - name: Database
        # query: >
          # SELECT table_schema "database", Round(Sum(data_length + index_length) / POWER(1024,2), 1)
          # "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;
        # column: value
        # unit_of_measurement: MB

  #- platform: systemmonitor
    #resources:
    #  - type: disk_use_percent
    #    arg: /
    #  - type: memory_use_percent
    #  - type: processor_use
    #  - type: last_boot

  - platform: uptime

  - platform: time_date
    display_options:
      - time
      - date

  # - platform: mqtt
    # name: valetudo_version_installed
    # state_topic: homeassistant/vacuum/robot/robot_vacuum/config
    # value_template: >
      # {{ value_json.device.sw_version.split(' ')[0] }}

  # - platform: rest
    # name: valetudo_version_latest
    # resource: https://api.github.com/repos/Hypfer/Valetudo/releases/latest
    # value_template: >
      # {{ value_json.tag_name }}
    # scan_interval: 86400

  # - platform: mqtt
    # name: tasmota_version_installed
    # state_topic: tasmota/discovery/C44F33B95EBA/config
    # value_template: >
      # {{ value_json.sw }}

  # - platform: rest
    # name: tasmota_version_latest
    # resource: https://api.github.com/repos/arendst/Tasmota/releases/latest
    # value_template: >
      # {{ value_json.tag_name.split("v")[1] }}
    # scan_interval: 86400

  # - platform: rest
    # name: covid_19_folkhalsomyndigheten
    # resource: https://www.arcgis.com/sharing/rest/content/items/2dc63e26f509468f896ec69476b0dab3/data
    # value_template: >
      # {{ 'Inaccessible' if value_json.embedCode == '' else 'Available' }}
    # json_attributes_path: $.widgets.widget_1.config
    # json_attributes: [embedCode]
    # scan_interval: 21600

  # - platform: rest
    # name: skanetrafiken
    # resource: !secret skanetrafiken
    # value_template: >
      # {{ value_json.Trip[0].LegList.Leg[1].Product.num }}
    # json_attributes_path: $.Trip[0].LegList.Leg[1].Origin
    # json_attributes: [name, time, date]
    # scan_interval: 60

  - platform: rest
    name: hass_release_notes
    resource: https://api.github.com/repos/home-assistant/core/releases/latest
    value_template: >
      {{ value_json.name }}
    json_attributes:
      - body
    scan_interval: 21600

  - platform: rest
    name: hass_release_notes_rc
    resource: https://api.github.com/repos/home-assistant/core/releases?per_page=1
    value_template: >
      {{ value_json[0].name }}
    json_attributes:
      - body
    scan_interval: 21600

  # - platform: dnsip

  # - platform: darksky
    # api_key: !secret darksky_api_key
    # language: sv
    # monitored_conditions:
      # - temperature
      # - apparent_temperature
      # - precip_probability

  # - platform: rest
    # name: docker_cpu
    # resource: !secret ha_dockermon_cpu
    # value_template: >
      # {% set cpuDelta = value_json.cpu_stats.cpu_usage.total_usage - value_json.precpu_stats.cpu_usage.total_usage %}
      # {% set systemDelta = value_json.cpu_stats.system_cpu_usage - value_json.precpu_stats.system_cpu_usage %}
      # {{ (cpuDelta / systemDelta * value_json.cpu_stats.cpu_usage.percpu_usage | length * 100) | round(1) }}
    # json_attributes:
      # - cpu_stats
      # - precpu_stats
      # - memory_stats

  - platform: plex_recently_added
    token: !secret plex_token
    host: !secret plex_host
    port: !secret plex_port
    max: 1
    img_dir: /
    image_resolution: 900

  # - platform: command_line
    # name: imac_ip
    # scan_interval: 86400
    # command: !secret imac_ip

  # - platform: command_line
    # name: imac_system_ssd
    # scan_interval: 86400
    # unit_of_measurement: '%'
    # command: !secret imac_system_ssd

  # - platform: command_line
    # name: imac_macintosh_hd
    # scan_interval: 86400
    # unit_of_measurement: '%'
    # command: !secret imac_macintosh_hd

  # - platform: command_line
    # name: imac_cpu
    # scan_interval: 86400
    # unit_of_measurement: '%'
    # command: !secret imac_cpu

  # - platform: command_line
    # name: imac_mem
    # scan_interval: 86400
    # unit_of_measurement: '%'
    # command: !secret imac_mem

  # - platform: command_line
    # name: monitors_volume
    # scan_interval: 86400
    # command: !secret monitors_update_volume

  # - platform: command_line
    # name: imac_uptime
    # scan_interval: 86400
    # command: !secret imac_uptime
    # value_template: >
      # {{ value | int | timestamp_custom('%Y-%m-%dT%H:%M:%S') }}

  - platform: command_line
    name: hacs_version
    scan_interval: 86400
    command: >
      sed -nr 's/\"version\": \"([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+)\"/\1/p' /config/custom_components/hacs/manifest.json

  - platform: command_line
    name: nas_disk
    command: !secret nas_disk
    unit_of_measurement: '%'
    value_template: >
      {{ value[:-1] }}
    scan_interval: 300

  - platform: command_line
    name: nas_cpu
    command: !secret nas_cpu
    unit_of_measurement: '%'
    scan_interval: 300

  - platform: command_line
    name: nas_mem
    command: !secret nas_mem
    unit_of_measurement: '%'
    value_template: >
      {{ value | round(1) }}
    scan_interval: 300

  - platform: command_line
    name: nas_uptime
    command: !secret nas_uptime
    value_template: >
      {{ value | replace(' ', 'T') }}
    scan_interval: 300

  # - platform: command_line
  #   name: smieci_zmieszane_import
  #   scan_interval: 86400
  #   command: >
  #     cat /config/smieci_zmieszane.txt

  # - platform: command_line
  #   name: smieci_segregowane_import
  #   scan_interval: 86400
  #   command: >
  #     cat /config/smieci_segregowane.txt

  # - platform: command_line
  #   name: smieci_bio_import
  #   scan_interval: 86400
  #   command: >
  #     cat /config/smieci_bio.txt

  - platform: mqtt
    name: anarion_last_changed
    state_topic: homeassistant/persistence/anarion
    value_template: >
      {{ value | replace(' ', 'T') }}
  - platform: mqtt
    name: iwona_last_changed
    state_topic: homeassistant/persistence/iwona
    value_template: >
      {{ value | replace(' ', 'T') }}
  - platform: mqtt
    name: hania_last_changed
    state_topic: homeassistant/persistence/hania
    value_template: >
      {{ value | replace(' ', 'T') }}

  - platform: template
    sensors:
      smart_plug_2_current:
        unique_id: "smart_plug_2_current"
        friendly_name_template: "{{ state_attr('switch.smart_plug_2','friendly_name') }} Current"
        value_template: "{{ state_attr('switch.smart_plug_2','current') | float(default=0) }}"
        unit_of_measurement: "mA"
      smart_plug_2_power:
        unique_id: "smart_plug_2_power"
        friendly_name_template: "{{ state_attr('switch.smart_plug_2','friendly_name') }} Power"
        value_template: "{{ state_attr('switch.smart_plug_2','current_consumption') | float(default=0) }}"
        unit_of_measurement: "W"
      smart_plug_2_voltage:
        unique_id: "smart_plug_2_voltage"
        friendly_name_template: "{{ state_attr('switch.smart_plug_2','friendly_name') }} Voltage"
        value_template: "{{ state_attr('switch.smart_plug_2','voltage') | float(default=0) }}"
        unit_of_measurement: "V"
      room_aqi:
        unique_id: "room_aqi"
        value_template: "{{ states('sensor.airpurifier_pm2_5') | int(default=0) }}"
        unit_of_measurement: "µg/m³"
        friendly_name: Living Room AQI
    #----- Count Automations
      count_automations:
        value_template: "{{ states.automation | list | length }}"
    #----- Count Scripts
      count_scripts:
        value_template: "{{ states.script| list | length }}"
    #----- Count Device Trackers
      count_device_trackers:
        value_template: "{{ states.device_tracker | list | length }}"
    #----- Count Binary Sensors
      count_binary_sensors:
        value_template: "{{ states.binary_sensor| list | length }}"
    #----- Count Sensors
      count_sensors:
        value_template: "{{ states.sensor | list | length }}"
    #----- Count Switches
      count_switches:
        value_template: "{{ states.switch | list | length }}"
    #----- Count Zones
      count_zones:
        value_template: "{{ states.zone | list | length }}"
    #----- Input Booleans
      count_input_booleans:
        value_template: "{{ states.input_boolean | list | length }}"
    #----- Input Numbers
      count_input_numbers:
        value_template: "{{ states.input_number | list | length }}"
    #----- Input Texts
      count_input_texts:
        value_template: "{{ states.input_text | list | length }}"
    #----- Input Selects
      count_input_selects:
        value_template: "{{ states.input_select | list | length }}"
    #----- Input Date Times
      count_input_datetimes:
        value_template: "{{ states.input_datetime | list | length }}"

      meteo_url:
        value_template: >-
          {% if now().hour >= 0 and now().hour < 10 -%}
          https://www.meteo.pl/um/metco/mgram_pict.php?ntype=0u&fdate={{ (now() - timedelta( days = 1 )).strftime('%Y%m%d') }}18&row=466&col=232&lang=pl
          {%- elif now().hour >= 10 and now().hour < 12 -%}
          https://www.meteo.pl/um/metco/mgram_pict.php?ntype=0u&fdate={{ now().strftime('%Y%m%d') }}00&row=466&col=232&lang=pl
          {%- elif now().hour >= 12 and now().hour < 19 -%}
          https://www.meteo.pl/um/metco/mgram_pict.php?ntype=0u&fdate={{ now().strftime('%Y%m%d') }}06&row=466&col=232&lang=pl
          {%- elif now().hour >= 19 and now().hour < 24 -%}
          https://www.meteo.pl/um/metco/mgram_pict.php?ntype=0u&fdate={{ now().strftime('%Y%m%d') }}12&row=466&col=232&lang=pl
          {%- endif %}
      # temperature_living_room:
        # unique_id: "temperature_living_room"
        # friendly_name_template: "Living Room Temperature"
        # value_template: "{{ states('sensor.airpurifier_temperature') | float(default=0) }}"
        # unit_of_measurement: "°C"

      # humidity_living_room:
        # unique_id: "humidity_living_room"
        # friendly_name_template: "Living Room Humidity"
        # value_template: "{{ states('sensor.airpurifier_humidity') | float(default=0) }}"
        # unit_of_measurement: "%"

      # ha_uptime:
        # friendly_name: "Home Assistant uptime"
        # value_template: >-
          # {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.ha_uptime_2')) %}

          # {% if up_time == 0 %}
            # Just restarted...
          # {% else %}
            # {% set minutes = (up_time // 60) | int %}
            # {% set hours = (minutes // 60) %}
            # {% set days = (hours // 24) %}
            # {% set weeks = (days // 7) %}

            # {% set minutes = (minutes % 60) %}
            # {% set hours =  (hours % 24) %}
            # {% set days = (days % 7) %}

            # {% macro phrase(value, name) %}
                      # {%- set value = value %}
                      # {%- set end = 's' if value > 1 else '' %}
                      # {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
            # {%- endmacro %}

            # {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
            # {% set last_comma = text.rfind(',') %}
            # {% if last_comma != -1 %}
              # {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
            # {% endif %}

          # {{ text }}

          # {% endif %}

      people_at_home:
        unique_id: people_at_home
        friendly_name: People at Home
        value_template: >
          {%- set people = expand('group.people') %}
          {{ people | selectattr('state', 'in', ['home', 'on'] ) | list | count }}
        icon_template: >
          {%- set icons = ['account-off', 'account', 'account-multiple'] %}
          {%- set people = expand('group.people') %}
          {%- set cnt = people | selectattr('state', 'in', ['home', 'on'] ) | list | count %}
          {%- if cnt >= 0 %}
            mdi:{{ icons[cnt] if cnt in range(icons | count) else 'account-group' }}
          {%- else %}
            mdi:account-alert
          {%- endif %}
        attribute_templates:
          people: >
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {{ people }}
          and: >
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {%- if people | count > 0 %}
              {{- [people[:-1] | join(', '), 'and', people[-1]] | join(' ') if people | count > 1 else people[0] }}
            {%- else %}unknown
            {%- endif %}
          or: >
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {%- if people | count > 0 %}
              {{- [people[:-1] | join(', '), 'or', people[-1]] | join(' ') if people | count > 1 else people[0] }}
            {%- else %}unknown
            {%- endif %}
          count: >
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {{ people | count }}
      tv_channel:
        unique_id: current_tv_channel
        friendly_name: Current TV Channel
        value_template: >
          {%- set all_channels = ['TVP1 HD', 'TVP2 HD', 'TVP3 Krakow', 'Polsat', 'TVN', 'TV4', 'TV Puls', 'TVN 7', 'PULS 2', 'TV6', 'Super Polsat', 'ESKA TV', 'TTV', 'Polo TV', 'SILVER TV', 'TV Trwam', 'Stopklatka TV', 'Fokus TV', 'TVP ABC', 'TVP Kultura HD', 'TVP Historia', 'TVP Sport HD', 'TVP Info', 'TVP Kobieta', 'Metro', 'Zoom TV', 'Nowa TV', 'WP', 'eSZKOLA DOMOWE PRZEDSZKOLE', 'Telewizja Naziemna', 'TVP Kultura 2', 'EmiTV', 'TOYAcyfrowaINFO'] %}
          {{ state_attr('media_player.sony_bravia_tv','source') }}
      czas_tv:
        friendly_name: Czas działania TV
        value_template: >
          {% if (states('sensor.czas_dzialania_tv') == "unavailable") or (states('sensor.czas_dzialania_tv') == "unknown") %}
          0
          {% else %}
          {{states('sensor.czas_dzialania_tv')}}
          {% endif %}
        unit_of_measurement: "h"

      today_events:
        friendly_name: "Dzisiejsze wydarzenia"
        value_template: "{{ state_attr('calendar.anarion_dunedain', 'message') }}"
        icon_template: mdi:calendar
        attribute_templates:
          location: "{{ state_attr('calendar.anarion_dunedain', 'location') }}"
          description: "{{ state_attr('calendar.anarion_dunedain', 'description') }}"

      covid19_infections:
        value_template: "{{ state_attr('sensor.covid19','today')['tests']['infections'] | int }}"
        unit_of_measurement: '🙍'
        friendly_name: "Zakażenia COVID19"

      covid19_deaths:
        value_template: "{{ state_attr('sensor.covid19','today')['tests']['deaths']['deaths'] | int }}"
        unit_of_measurement: '🙍'
        friendly_name: "Zgony COVID19"

      covid19_recovered:
        value_template: "{{ state_attr('sensor.covid19','today')['tests']['recovered'] | int }}"
        unit_of_measurement: '👨'
        friendly_name: "Wyleczenia COVID19"

      air_quality_level:
        friendly_name: Poziom Jakości Powietrza
        value_template: >-
          {%- if (states('sensor.u_s_air_pollution_level') == "good") -%} dobry
          {%- elif (states('sensor.u_s_air_pollution_level') == "hazardous") -%} niebezpieczny
          {%- elif (states('sensor.u_s_air_pollution_level') == "moderate") -%} umiarkowany
          {%- elif (states('sensor.u_s_air_pollution_level') == "unhealthy") -%} niezdrowy
          {%- elif (states('sensor.u_s_air_pollution_level') == "unhealthy_sensitive") -%} niezdrowy dla grup wrażliwych
          {%- elif (states('sensor.u_s_air_pollution_level') == "very_unhealthy") -%} bardzo niezdrowy
          {%- endif %}

      alarm_status:
        friendly_name: Status alarmu
        value_template: >-
          {%- if (states('alarm_control_panel.glowny_alarm') == "disarmed") -%} rozbrojony
          {%- elif (states('alarm_control_panel.glowny_alarm') == "arming") -%} uzbrajanie
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_home") -%} w domu
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_away") -%} poza domem
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_night") -%} nocny
          {%- elif (states('alarm_control_panel.glowny_alarm') == "armed_custom_bypass") -%} custom
          {%- elif (states('alarm_control_panel.glowny_alarm') == "pending") -%} w trakcie
          {%- elif (states('alarm_control_panel.glowny_alarm') == "triggered") -%} wyzwolony
          {%- endif %}

      komfovent_on_off:
        friendly_name: "Komfovent On Off"
        unit_of_measurement: "State"
        value_template: >-
          {% set mapper =  {
              '0' : 'Off',
              '1' : 'On'} %}
          {% set state =  states.sensor.komfovent_on_off_num.state %}
          {{ mapper[state] if state in mapper else 'Unknown' }}
      komfovent_eco_mode:
        friendly_name: "Komfovent Eco Mode"
        unit_of_measurement: "State"
        value_template: >-
          {% set mapper =  {
              '0' : 'Off',
              '1' : 'On'} %}
          {% set state =  states.sensor.komfovent_eco_num.state %}
          {{ mapper[state] if state in mapper else 'Unknown' }}
      komfovent_auto_mode:
        friendly_name: "Komfovent Auto Mode"
        unit_of_measurement: "State"
        value_template: >-
          {% set mapper =  {
              '0' : 'Off',
              '1' : 'On'} %}
          {% set state =  states.sensor.komfovent_auto_num.state %}
          {{ mapper[state] if state in mapper else 'Unknown' }}
      komfovent_operation_mode:
        friendly_name: "Komfovent Operation Mode"
        unit_of_measurement: "State"
        value_template: >-
          {% set mapper =  {
              '0' : 'Standby',
              '1' : 'Away',
              '2' : 'Normal',
              '3' : 'Intensive',
              '4' : 'Boost',
              '5' : 'Kitchen',
              '6' : 'Fireplace',
              '7' : 'Overide',
              '8' : 'Holiday',
              '9' : 'Air Quality',
              '10' : 'Off' } %}
          {% set state =  states.sensor.komfovent_mode_num.state %}
          {{ mapper[state] if state in mapper else 'Unknown' }}
      komfovent_scheduler_mode:
        friendly_name: "Komfovent Scheduler Mode"
        unit_of_measurement: "State"
        value_template: >-
          {% set mapper =  {
              '0' : 'StayAtHome',
              '1' : 'WorkingWeek',
              '2' : 'Office',
              '3' : 'Custom'} %}
          {% set state =  states.sensor.komfovent_scheduler_num.state %}
          {{ mapper[state] if state in mapper else 'Unknown' }}



  - platform: integration
    source: sensor.smart_plug_2_power
    name: smart_plug_2_2_energy
    round: 2
    unit_prefix: k
    unit_time: h

  - platform: uptime
    name: HA Uptime

  - platform: version
    source: hassio

  - platform: command_line
    name: Supervisor updates
    command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .installed)]}'''
    value_template: "{{ value_json.addons | length }}"
    json_attributes:
    - newest_version
    - current_version
    - addons

  # - platform: attributes
    # friendly_name: "Air quality"
    # attribute: air_quality_index
    # unit_of_measurement: "%"
    # entities:
    # - air_quality.gios

  # - platform: attributes
    # friendly_name: "Cząsteczki 10"
    # attribute: particulate_matter_10
    # icon: 'mdi:fog'
    # unit_of_measurement: "%"
    # entities:
      # - air_quality.gios
  - platform: mqtt
    name: Zigbee2mqtt Networkmap
    # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
    state_topic: zigbee2mqtt/bridge/response/networkmap
    value_template: >-
      {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
    # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
    json_attributes_topic: zigbee2mqtt/bridge/response/networkmap
    json_attributes_template: "{{ value_json.data.value | tojson }}"

  # - platform: google_travel_time
    # api_key: !secret google_maps_api_key
    # scan_interval: 600
    # name: Home to Work
    # origin: zone.home
    # destination: zone.work
    # options:
      # language: pl
      # mode: driving

  # - platform: google_travel_time
    # api_key: !secret google_maps_api_key
    # scan_interval: 600
    # name: Phone to Home
    # origin: device_tracker.nokia_8_3_5g
    # destination: zone.work
    # options:
      # language: pl
      # mode: driving

  - platform: scrape
    name: Stopa bazowa PKO BP
    resource: https://www.pkobp.pl/waluty/#/base_rate/
    select: '#base_rate p'
    value_template: '{{ value.split(" ")[8] | replace ("%","") | replace (",",".") }}'
    unit_of_measurement: '%'
    scan_interval: 3600

  - platform: scrape
    name: Wibor 6M
    resource: https://www.pkobp.pl/waluty/#/interbank/
    select: 'div.course__irs-tab-box:nth-child(4) > table:nth-child(1) > tbody:nth-child(2) > tr:nth-child(8) > td:nth-child(2)'
    unit_of_measurement: '%'
    scan_interval: 3600

  - platform: history_stats
    name: Czas działania TV
    entity_id: media_player.sony_bravia_tv
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"

  - platform: filter
    name: "Smoothed Living Room AQI"
    entity_id: sensor.room_aqi
    filters:
      - filter: outlier
        window_size: 4
        radius: 2.0
      - filter: lowpass
        time_constant: 10
      - filter: time_simple_moving_average
        window_size: "00:05"
        precision: 2

  - platform: filter
    name: "Smoothed Living Room Temperature"
    entity_id: sensor.airpurifier_temperature
    filters:
      # - filter: outlier
        # window_size: 4
        # radius: 2.0
      # - filter: lowpass
        # time_constant: 10
      - filter: time_simple_moving_average
        window_size: "00:05"
        precision: 2

  - platform: rest
    name: COVID19
    resource: https://koronawirus-api.herokuapp.com/api/covid-vaccinations-tests/daily
    value_template: >
      {{ value_json.today.infections.newInfections }}
    json_attributes:
      - today
    scan_interval: 86400
    force_update: true

  - platform: antistorm
    station_id: 148
    monitored_conditions:
      - 'storm_probability'
      - 'storm_time'
      - 'rain_probability'
      - 'rain_time'

  - platform: scrape
    name: Tauron_energy_cost
    resource: http://www.cena-pradu.pl/tabela.html
    select: ".WordSection1 > table:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > div > table > tr:nth-child(7) > td:nth-child(6) > p:nth-child(1) > b:nth-child(1) > span:nth-child(1)"
    index: 0
    unit_of_measurement: 'PLN/kWh'
    value_template: >
      {{ value.split("-")[0] | replace(",",".") | float(default=0) }}
    scan_interval: 3600

  - platform: scrape
    name: Tauron_static_cost
    resource: http://www.cena-pradu.pl/tabela.html
    select: ".WordSection1 > table:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > div > table > tr:nth-child(7) > td:nth-child(6) > p:nth-child(1) > b:nth-child(1) > span:nth-child(1)"
    index: 1
    unit_of_measurement: 'PLN'
    value_template: >
      {{ value.split("-")[0] | replace(",",".") | float(default=0) }}
    scan_interval: 3600
