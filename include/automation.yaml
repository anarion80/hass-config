automation:

    ####################################################
    #                                                  #
    #                   AUTOMATIONS                    #
    #                                                  #
    ####################################################

  - alias: homeassistant_start
    id: '7426848686945'
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: button.press
        target:
          entity_id: button.fire_tablet_restart_browser

  - alias: lovelace_updated_ignore
    id: '9381519720051'
    mode: restart
    trigger:
      - platform: event
        event_type: lovelace_updated
    action:
      - service: browser_mod.toast
        data:
          duration: 1
          message: ' '

  - alias: clear_log_filesize
    id: '3331821824310'
    trigger:
      - platform: numeric_state
        entity_id: sensor.home_assistant_log_size
        above: 50
    action:
      - service: shell_command.ha_purge_logs

  # - alias: imac_update
    # id: '3673314240807'
    # trigger:
      # - platform: state
        # entity_id: switch.computer_imac
        # from: 'off'
        # to: 'on'
    # action:
      # - delay:
          # seconds: 10
      # - service: homeassistant.update_entity
        # entity_id:
          # - sensor.imac_ip
          # - sensor.imac_cpu
          # - sensor.imac_mem
          # - sensor.imac_system_ssd
          # - sensor.imac_macintosh_hd
          # - sensor.monitors_volume
          # - binary_sensor.monitors_mute_check
          # - sensor.imac_uptime

  - alias: tv_on_lights
    id: '6657050215613'
    trigger:
      - platform: state
        entity_id: media_player.sony_bravia_tv
        from: 'off'
        to: 'on'
    action:
      - service: light.turn_on
        entity_id: light.tv

  - alias: no_motion_bathroom
    id: '9936892396917'
    trigger:
      - platform: state
        entity_id: binary_sensor.sensor_badrum_motion
        to: 'off'
        for:
          minutes: 30
    action:
      - service: light.turn_off
        data:
          entity_id: light.badrum

    ####################################################
    #                                                  #
    #                  NOTIFICATIONS                   #
    #                                                  #
    ####################################################

  - alias: toast
    id: '3900676590344'
    mode: parallel
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.sensor_garderob_motion
          - binary_sensor.sensor_badrum_motion
          - binary_sensor.wemo_motion
        from: 'off'
        to: 'on'
    action:
      - service: browser_mod.toast
        data:
          duration: 3000
          message: >
            Wykryto ruch w {{ trigger.to_state.name }}

  - alias: macos_notification_motion_hall
    id: '4135668040301'
    trigger:
      - platform: state
        entity_id: binary_sensor.sensor_hall_motion
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: notify.mobile_app_mattias_imac
        data:
          message: Rörelse i hallen detekterat
          title: Home Assistant

  - alias: ios_notify_hass_rc
    id: '3984233949106'
    trigger:
      - platform: state
        entity_id: sensor.hass_version_latest_beta
    condition:
      - condition: state
        entity_id: sensor.template_hass_dev_release
        state:
          - Today
          - Released
    action:
      - service: notify.mobile_app_nokia_8_3_5g
        data:
          title: >
            RC {{ states(trigger.entity_id) }} dostępny
          message: Naciśnij, żeby przeczytać release notes
          data:
            ttl: 0
            priority: high
            url: https://rc.home-assistant.io/latest-release-notes/

  - alias: ios_notify_hass_update
    id: '7958228563778'
    variables:
      latest: >
        {{ states(trigger.entity_id) }}
      installed: >
        {{ states('sensor.hass_version_installed') }}
    trigger:
      - platform: state
        entity_id: sensor.hass_version_latest
    condition: >
      {{ installed != latest if '.' in installed and '.' in latest else false }}
    action:
      - service: homeassistant.update_entity
        target:
          entity_id:
            - sensor.hass_release_notes
            - sensor.hass_release_notes_rc
      - delay:
          minutes: 30
      - service: notify.mobile_app_nokia_8_3_5g
        data:
          title: >
           {{ latest }} dostępny {{ '\U0001F389' }}
          message: Przytrzymaj żeby uaktualnić
          data:
            data:
              url: https://www.home-assistant.io/latest-release-notes/

  - alias: ios_notify_hass_update_action
    id: '0694774018396'
    trigger:
      - platform: event
        event_type: ios.notification_action_fired
        event_data:
          actionName: START_WATCHTOWER
    action:
      - service: switch.turn_on
        entity_id: switch.watchtower

  - alias: notify_and_remove_completed_torrent
    id: '7876919385611'
    mode: parallel
    max: 25
    trigger:
      - platform: event
        event_type: transmission_downloaded_torrent
    action:
      - service: notify.mobile_app_nokia_8_3_5g
        data:
          title: Torrent ściągnięty
          message: >
            {{ trigger.event.data.name }}
      - service: transmission.stop_torrent
        data:
          name: Transmission
          id: >
            {{ trigger.event.data.id | int }}
      - delay:
          minutes: 10
      - service: transmission.remove_torrent
        data:
          name: Transmission
          id: >
            {{ trigger.event.data.id | int }}

    ####################################################
    #                                                  #
    #                  SCAN INTERVAL                   #
    #                                                  #
    ####################################################

  # - alias: conditional_scan_interval
    # id: '0007659752611'
    # trigger:
      # - platform: time_pattern
        # minutes: /5
    # condition:
      # - condition: state
        # entity_id: switch.computer_imac
        # state: 'on'
    # action:
      # - service: homeassistant.update_entity
        # entity_id:
          # - sensor.imac_ip
          # - sensor.imac_cpu
          # - sensor.imac_mem
          # - sensor.imac_system_ssd
          # - sensor.imac_macintosh_hd
          # - sensor.monitors_volume
          # - binary_sensor.monitors_mute_check
          # - sensor.imac_uptime

  - alias: tasmota_scan_interval
    id: '2405277038357'
    trigger:
      - platform: time_pattern
        minutes: /5
    action:
      - service: mqtt.publish
        data:
          topic: cmnd/tasmotas/status
          payload: 8

  - alias: update_hass_release_notes
    id: '4289040658246'
    trigger:
      - platform: state
        entity_id:
          - sensor.hass_version_latest
          - sensor.hass_version_latest_beta
    action:
      - service: homeassistant.update_entity
        entity_id:
          - sensor.hass_release_notes
          - sensor.hass_release_notes_rc

  - alias: hacs_sensor_refresh
    id: '2001123854555'
    trigger:
      - platform: event
        event_type: hacs/repository
        event_data:
          action: install
    action:
      #- delay:
      #    seconds: 4
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.hacs

    ####################################################
    #                                                  #
    #                     MONITORS                     #
    #                                                  #
    ####################################################

  # - alias: monitors_volume_slider
    # id: '0022255594357'
    # trigger:
      # - platform: state
        # entity_id: input_number.monitors_volume
    # condition:
      # - condition: state
        # entity_id: switch.computer_imac
        # state: 'on'
    # action:
      # - service: shell_command.monitors_volume_slider
      # - service: homeassistant.update_entity
        # entity_id: binary_sensor.monitors_mute_check
      # - service: homeassistant.update_entity
        # entity_id: sensor.monitors_volume

  # - alias: monitors_volume_update
    # id: '1275485733091'
    # variables:
    #   min: 7
    #   max: 75
    #   volume: >
    #     {{ states(trigger.entity_id) | int }}
    # trigger:
      # - platform: state
        # entity_id: sensor.monitors_volume
    # condition:
      # - condition: state
        # entity_id: switch.computer_imac
        # state: 'on'
    # action:
      # - service: homeassistant.update_entity
        # entity_id: binary_sensor.monitors_mute_check
      # - service: input_number.set_value
        # data:
          # entity_id: input_number.monitors_volume
          # value: >
            # {{ max if volume > max else iif(volume < min, min, volume) }}

  - alias: eq_calibration
    id: '7780410156815'
    mode: queued
    trigger:
      - platform: state
        entity_id: switch.wemo_monitors
        from:
          - 'on'
          - 'off'
        to:
          - 'on'
          - 'off'
    action:
      if:
        condition: state
        entity_id: switch.gosund_monitors_switch
        state: 'on'
      then:
        service: shell_command.reference_monitors
      else:
        service: shell_command.reference_headphones

  - alias: turn_off_monitors
    id: '9863921240123'
    trigger:
      - platform: state
        entity_id: switch.computer_imac
        from: 'on'
        to: 'off'
        for:
          minutes: 15
    action:
      - service: switch.turn_off
        entity_id: switch.wemo_monitors

    ####################################################
    #                                                  #
    #                       FAN 1                      #
    #                                                  #
    ####################################################

  - alias: wemo_fan_turn_off
    id: '0568618309657'
    trigger:
      - platform: state
        entity_id: switch.wemo_fan
        from: 'off'
        to: 'on'
        for:
          hours: >
            {{ states('input_number.wemo_fan_timer') | int }}
    action:
      - service: switch.turn_off
        entity_id: switch.wemo_fan

    ####################################################
    #                                                  #
    #                       FAN 2                      #
    #                                                  #
    ####################################################

  - alias: sovrum_anslut_turn_off
    id: '1050805589188'
    trigger:
      - platform: state
        entity_id: fan.sovrum_anslut
        from: 'off'
        to: 'on'
        for:
          hours: "{{ states('input_number.sovrum_anslut_timer') | int }}"
    action:
      - service: switch.turn_off
        entity_id: fan.sovrum_anslut

  # - alias: sovrum_anslut_turn_on_temp
    # id: '0099808622760'
    # trigger:
      # - platform: numeric_state
        # entity_id: sensor.sensor_hall_temperature
        # above: 24
    # condition:
      # condition: and
      # conditions:
        # - condition: time
          # after: '20:00:00'
          # before: '07:00:00'
        # - condition: state
          # entity_id:
            # - person.anarion
            # - person.iwona
          # state: home
    # action:
      # - condition: state
        # entity_id: fan.sovrum_anslut
        # state: 'off'
      # - service: fan.turn_on
        # entity_id: fan.sovrum_anslut

  # - alias: sovrum_anslut_oscillate
    # id: '9897303821028'
    # trigger:
      # - platform: state
        # entity_id: input_boolean.sovrum_anslut_oscillate
    # action:
      # - service: remote.send_command
        # data:
          # entity_id: remote.broadlink_remote
          # command: !secret ir_fan_swing

  # - alias: sovrum_anslut_speed
    # id: '9292376382008'
    # mode: queued
    # trigger:
      # - platform: state
        # entity_id: fan.sovrum_anslut
    # action:
      # - choose:
        # - conditions: >
            # {{ trigger.from_state.attributes.speed == 'high' and trigger.to_state.attributes.speed == 'medium' or
            # trigger.from_state.attributes.speed == 'medium' and trigger.to_state.attributes.speed == 'low' or
            # trigger.from_state.attributes.speed == 'low' and trigger.to_state.attributes.speed == 'high' }}
          # sequence:
            # - repeat:
                # count: 2
                # sequence:
                  # - service: remote.send_command
                    # data:
                      # entity_id: remote.broadlink_remote
                      # command: !secret ir_fan_speed
        # - conditions: >
            # {{ trigger.from_state.attributes.speed == 'high' and trigger.to_state.attributes.speed == 'low' or
            # trigger.from_state.attributes.speed == 'medium' and trigger.to_state.attributes.speed == 'high' or
            # trigger.from_state.attributes.speed == 'low' and trigger.to_state.attributes.speed == 'medium' }}
          # sequence:
            # - service: remote.send_command
              # data:
                # entity_id: remote.broadlink_remote
                # command: !secret ir_fan_speed

  # ###temp
  # - alias: sovrum_anslut_speed_fix1_sync
  #   mode: queued
  #   trigger:
  #     - platform: template
  #       value_template: >
  #         {{ is_state('binary_sensor.gosund_fan', 'off') and not is_state('input_number.sovrum_anslut_speed', '0') }}
  #   action:
  #     - service: automation.turn_off
  #       target:
  #         entity_id: automation.sovrum_anslut_speed
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.sovrum_anslut_speed
  #         value: 0
  #     - service: automation.turn_on
  #       target:
  #         entity_id: automation.sovrum_anslut_speed

  # - alias: sovrum_anslut_speed_fix2_restore
  #   mode: queued
  #   trigger:
  #     - platform: template
  #       value_template: >
  #         {{ is_state('binary_sensor.gosund_fan', 'on') and is_state('input_number.sovrum_anslut_speed', '0') }}
  #   action:
  #     - service: automation.turn_off
  #       target:
  #         entity_id: automation.sovrum_anslut_speed
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.sovrum_anslut_speed
  #         value: 33
  #     - service: automation.turn_on
  #       target:
  #         entity_id: automation.sovrum_anslut_speed

    ####################################################
    #                                                  #
    #                   AIR PURIFIER                   #
    #                                                  #
    ####################################################

  # - alias: air_purifier_speed
    # id: '3692857919366'
    # mode: queued
    # trigger:
      # - platform: state
        # entity_id: input_number.air_purifier_speed
    # action:
      # - choose:
        # - conditions:
            # - condition: template
              # value_template: >
                # {% set from_1 = ( trigger.from_state.state  | int > 0    and   trigger.from_state.state  | int <= 25  ) %}
                # {% set to_2   = ( trigger.to_state.state    | int > 25   and   trigger.to_state.state    | int <= 50  ) %}
                # {% set from_2 = ( trigger.from_state.state  | int > 25   and   trigger.from_state.state  | int <= 50  ) %}
                # {% set to_3   = ( trigger.to_state.state    | int > 50   and   trigger.to_state.state    | int <= 75  ) %}
                # {% set from_3 = ( trigger.from_state.state  | int > 50   and   trigger.from_state.state  | int <= 75  ) %}
                # {% set to_4   = ( trigger.to_state.state    | int > 75   and   trigger.to_state.state    | int <= 100 ) %}

                # {{ from_1 and to_2 or from_2 and to_3 or from_3 and to_4 }}
          # sequence:
            # - service: remote.send_command
              # data:
                # entity_id: remote.broadlink_remote
                # command: !secret ir_purifier_speed_up
        # - conditions:
            # - condition: template
              # value_template: >
                # {% set from_1 = ( trigger.from_state.state  | int > 0    and   trigger.from_state.state  | int <= 25  ) %}
                # {% set to_3   = ( trigger.to_state.state    | int > 50   and   trigger.to_state.state    | int <= 75  ) %}

                # {{ from_1 and to_3 }}
          # sequence:
            # - repeat:
                # count: 2
                # sequence:
                  # - service: remote.send_command
                    # data:
                      # entity_id: remote.broadlink_remote
                      # command: !secret ir_purifier_speed_up
        # - conditions:
            # - condition: template
              # value_template: >
                # {% set from_2 = ( trigger.from_state.state  | int > 25   and   trigger.from_state.state  | int <= 50  ) %}
                # {% set to_1   = ( trigger.to_state.state    | int > 0    and   trigger.to_state.state    | int <= 25  ) %}
                # {% set from_3 = ( trigger.from_state.state  | int > 50   and   trigger.from_state.state  | int <= 75  ) %}
                # {% set to_2   = ( trigger.to_state.state    | int > 25   and   trigger.to_state.state    | int <= 50  ) %}
                # {% set from_4 = ( trigger.from_state.state  | int > 75   and   trigger.from_state.state  | int <= 100 ) %}
                # {% set to_3   = ( trigger.to_state.state    | int > 50   and   trigger.to_state.state    | int <= 75  ) %}

                # {{ from_2 and to_1 or from_3 and to_2 or from_4 and to_3 }}
          # sequence:
            # - service: remote.send_command
              # data:
                # entity_id: remote.broadlink_remote
                # command: !secret ir_purifier_speed_down
        # - conditions:
            # - condition: template
              # value_template: >
                # {% set from_3 = ( trigger.from_state.state  | int > 50   and   trigger.from_state.state  | int <= 75  ) %}
                # {% set to_1   = ( trigger.to_state.state    | int > 0    and   trigger.to_state.state    | int <= 25  ) %}
                # {% set from_4 = ( trigger.from_state.state  | int > 75   and   trigger.from_state.state  | int <= 100 ) %}
                # {% set to_2   = ( trigger.to_state.state    | int > 25   and   trigger.to_state.state    | int <= 50  ) %}

                # {{ from_3 and to_1 or from_4 and to_2 }}
          # sequence:
            # - repeat:
                # count: 2
                # sequence:
                  # - service: remote.send_command
                    # data:
                      # entity_id: remote.broadlink_remote
                      # command: !secret ir_purifier_speed_down
        # - conditions:
            # - condition: template
              # value_template: >
                # {% set to_4   = ( trigger.to_state.state    | int > 75   and   trigger.to_state.state    | int <= 100 ) %}

                # {{ to_4 }}
          # sequence:
            # - service: remote.send_command
              # data:
                # entity_id: remote.broadlink_remote
                # command: !secret ir_purifier_turbo
        # - conditions:
            # - condition: template
              # value_template: >
                # {% set from_4 = ( trigger.from_state.state  | int > 75   and   trigger.from_state.state  | int <= 100 ) %}
                # {% set to_1   = ( trigger.to_state.state    | int > 0    and   trigger.to_state.state    | int <= 25  ) %}

                # {{ from_4 and to_1 }}
          # sequence:
            # - repeat:
                # count: 3
                # sequence:
                  # - service: remote.send_command
                    # data:
                      # entity_id: remote.broadlink_remote
                      # command: !secret ir_purifier_speed_down

  # ###temp
  # - alias: air_purifier_speed_fix1_sync
  #   mode: queued
  #   trigger:
  #     - platform: template
  #       value_template: >
  #         {{ is_state('binary_sensor.gosund_air_purifier', 'off') and not is_state('input_number.air_purifier_speed', '0') }}
  #   action:
  #     - service: automation.turn_off
  #       target:
  #         entity_id: automation.air_purifier_speed
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.air_purifier_speed
  #         value: 0
  #     - service: automation.turn_on
  #       target:
  #         entity_id: automation.air_purifier_speed

  # - alias: air_purifier_speed_fix2_restore
  #   mode: queued
  #   trigger:
  #     - platform: template
  #       value_template: >
  #         {{ is_state('binary_sensor.gosund_air_purifier', 'on') and is_state('input_number.air_purifier_speed', '0') }}
  #   action:
  #     - service: automation.turn_off
  #       target:
  #         entity_id: automation.air_purifier_speed
  #     - service: input_number.air_purifier_speed
  #       data:
  #         entity_id: input_number.air_purifier_speed
  #         value: 25
  #     - service: automation.turn_on
  #       target:
  #         entity_id: automation.air_purifier_speed
  # ###

    ####################################################
    #                                                  #
    #                      TABLET                      #
    #                                                  #
    ####################################################

  - alias: fullykiosk_screensaver
    id: '9452750674803'
    mode: restart
    trigger:
      platform: state
      entity_id: binary_sensor.ffd92947_09fd7c47
      from: 'off'
      to: 'on'
    action:
      if:
        condition: template
        value_template: >
          {{ trigger.entity_id == 'binary_sensor.ffd92947_09fd7c47' }}
      then:
        - service: switch.turn_off
          entity_id: switch.fire_tablet_screensaver
        - service: light.turn_on
          data:
            entity_id: light.fire_tablet_screen
            brightness_pct: >
              {{ is_state('sun.sun', 'above_horizon') | iif(90, 65) }}
      else:
        - service: switch.turn_on
          entity_id: switch.fire_tablet_screensaver
        - delay:
            minutes: 15
        - service: browser_mod.close_popup
          data:
            deviceID: fire_tablet

    ####################################################
    #                                                  #
    #                    HDMI / TV                     #
    #                                                  #
    ####################################################

  - alias: hdmi_input_select
    id: '9559814521978'
    mode: parallel
    trigger:
      - platform: state
        entity_id: input_select.hdmi
      - platform: state
        entity_id: input_select.hdmi2
    action:
      - service: media_player.select_source
        data:
          entity_id: >
            {% if trigger.entity_id == 'input_select.hdmi' %}
              media_player.sony_bravia_tv
            {% elif trigger.entity_id == 'input_select.hdmi2' %}
              media_player.samsung_tv
            {% endif %}
          source: >
            {{ states(trigger.entity_id) }}

  - alias: turn_on_tv_fail_safe
    id: '0703991107325'
    mode: parallel
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.sony_bravia_tv
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.samsung_tv
    action:
      - service: media_player.turn_on
        data:
          entity_id: >
            {% set trigger = trigger.event.data.service_data.entity_id %}
            {% if trigger == 'media_player.sony_bravia_tv' %}
              media_player.vardagsrum
            {% elif trigger == 'media_player.samsung_tv' %}
              media_player.sovrum
            {% endif %}
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: >
            {% set trigger = trigger.event.data.service_data.entity_id %}
            {% if trigger == 'media_player.sony_bravia_tv' %}
              remote.vardagsrum
            {% elif trigger == 'media_player.samsung_tv' %}
              remote.sovrum
            {% endif %}
          command: menu

    ####################################################
    #                                                  #
    #                  LAUNDRY TIMER                   #
    #                                                  #
    ####################################################

  - alias: laundry_display
    id: '4792508317061'
    mode: restart
    trigger:
      - platform: time_pattern
        minutes: /5
    condition: >
      {% set start_time = state_attr('calendar.tvatta', 'start_time') %}
      {{ as_timestamp(start_time) - as_timestamp(now()) < 10 * 60 if start_time != None else false }}
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.laundry_display
      - delay:
          hours: 4
      - service: input_boolean.turn_off
        entity_id: input_boolean.laundry_display

  - alias: laundry_alert
    id: '3403466403120'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.laundry
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.ffd92947_09fd7c47
          media_content_id: /local/sound/timer.mp3
          media_content_type: music
      - delay:
          seconds: 2
      - service: tts.cloud_say
        data:
          entity_id: media_player.nest_mini
          message: >
            {{ ['Pranie gotowe', 'Czas wyjąć pranie', 'Pranie się skończyło'] | random }}
          language: pl-PL
      - service: notify.all_devices
        data:
          message: >
            {{'\U0001F9FA'}} {{ ['Pranie gotowe', 'Czas wyjąć pranie', 'Pranie się skończyło'] | random }}
          data:
            ttl: 0
            priority: high

    ####################################################
    #                                                  #
    #                      VACUUM                      #
    #                                                  #
    ####################################################

  # - alias: roborock_speed
  #   id: '0054872718027'
  #   trigger:
  #     - platform: state
  #       entity_id: input_select.roborock_speed
  #   action:
  #     - service: vacuum.set_fan_speed
  #       data:
  #         entity_id: vacuum.valetudo_robot
  #         fan_speed: >
  #           {% if is_state(trigger.entity_id, 'Silent') %} low
  #           {% elif is_state(trigger.entity_id, 'Standard') %} medium
  #           {% elif is_state(trigger.entity_id, 'Medium') %} high
  #           {% elif is_state(trigger.entity_id, 'Turbo') %} max
  #           {% endif %}

  # - alias: roborock_speed_update
  #   id: '3154087574817'
  #   trigger:
  #     - platform: state
  #       entity_id: vacuum.valetudo_robot
  #     - platform: homeassistant
  #       event: start
  #   action:
  #     - service: input_select.select_option
  #       data:
  #         entity_id: input_select.roborock_speed
  #         option: >
  #           {% set entity_id = 'vacuum.valetudo_robot' %}
  #           {% if is_state_attr(entity_id, 'fan_speed', 'low') %} Sil;ent
  #           {% elif is_state_attr(entity_id, 'fan_speed', 'medium') %} Standard
  #           {% elif is_state_attr(entity_id, 'fan_speed', 'high') %} Medium
  #           {% elif is_state_attr(entity_id, 'fan_speed', 'max') %} Turbo
  #           {% elif is_state_attr(entity_id, 'fan_speed', 'off') %} Off
  #           {% endif %}

    ####################################################
    #                                                  #
    #                   PERSISTENCE                    #
    #                                                  #
    ####################################################

  - alias: person_home
    id: '8423590985012'
    mode: parallel
    trigger:
      - platform: state
        entity_id:
          - person.anarion
          - person.iwona
        from:
          - home
          - not_home
        to:
          - home
          - not_home
    action:
      service: mqtt.publish
      data:
        topic_template: >
          homeassistant/persistence/{{ trigger.to_state.name | lower }}
        payload_template: >
          {{ now() }}
        retain: true

  - id: '1613824435200'
    alias: Air Purifier On
    description: ''
    trigger:
    - above: '25'
      for: 0:05:00
      platform: numeric_state
      entity_id: sensor.airpurifier_pm2_5
    condition:
      and:
        - condition: time
          after: '9:00'
          before: '23:00'
        - condition: zone
          entity_id: person.anarion
          zone: zone.home
        - condition: state
          entity_id: fan.zhimi_airpurifier_v7
          state: 'off'
    action:
    - service: notify.pushover
      data:
        message: AQI powyżej {{ states('sensor.airpurifier_pm2_5') }}, włączam oczyszczacz!
    - service: fan.turn_on
      data:
        preset_mode: Auto
      target:
        entity_id: fan.zhimi_airpurifier_v7
    mode: single
  - id: '1613826008700'
    alias: Air Purifier Off
    description: ''
    trigger:
    - platform: numeric_state
      below: '20'
      for: 0:10:00
      entity_id: sensor.airpurifier_pm2_5
    condition:
    - condition: state
      entity_id: fan.zhimi_airpurifier_v7
      state: 'on'
    action:
    - service: notify.pushover
      data:
        message: AQI jest w normie, wyłączam oczyszczacz!
    - service: fan.turn_off
      data: {}
      entity_id: fan.zhimi_airpurifier_v7
    mode: single
  - id: '1613993960200'
    alias: Anarion is out of home
    description: ''
    use_blueprint:
      path: homeassistant/notify_leaving_zone.yaml
      input:
        person_entity: person.anarion
        zone_entity: zone.home
        notify_device: b0c171c0e7c87b51e2a35c49fd79e5ff
  - id: '1613995690500'
    alias: Mute Spotify Ads
    description: ''
    use_blueprint:
      path: homeassistant/mute_spotify_ads.yaml
      input:
        mediaplayer_entity: media_player.nest_mini
  - id: '1613996396700'
    alias: Iwona is out
    description: ''
    use_blueprint:
      path: homeassistant/notify_leaving_zone.yaml
      input:
        person_entity: person.iwona
        zone_entity: zone.home
        notify_device: b0c171c0e7c87b51e2a35c49fd79e5ff
  - id: '1614021562500'
    alias: Notify when redmi note 5 battery level is lower than 5
    description: ''
    trigger:
    - platform: numeric_state
      below: '5'
      entity_id: sensor.redmi_note_5_battery_level
    condition:
    - condition: time
      after: '8:00'
      before: '20:00'
    action:
    - service: tts.google_cloud_say
      data:
        message: Iwona, bateria w telefonie ci spadła poniżej {{ states('sensor.redmi_note_5_battery_level')
          }} procent. Podładuj sobie
        entity_id: media_player.nest_mini
    - service: notify.mobile_app_redmi_note_5
      data:
        message: TTS
        title: Iwona, bateria ci się kończy, podładuj sobie
        data:
          channel: alarm_stream_max
    mode: single
  - id: '1615319114500'
    alias: Turn on lampka u Hani after pressing button1
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.button1_action
      to: single
    - platform: state
      entity_id: sensor.switch1_action
      to: single
    condition: []
    action:
    - service: light.toggle
      target:
        entity_id: light.lampka_u_hani
    mode: single
  - id: '1617115926500'
    alias: Powiadomienie o angielskim
    description: ''
    trigger:
    - platform: time
      at: '16:00'
    condition: []
    action:
    # - service: notify.mobile_app_ta_1004
    #   data:
    #     message: TTS
    #     title: Kochana Hanusiu, czas na angielski! Zrób proszę lekcje ładnie, bez
    #       marudzenia!
    #     data:
    #       channel: alarm_stream_max
    - service: tts.google_cloud_say
      data:
        entity_id: media_player.nest_mini
        message: Kochani Hanusiu i Wojtusiu, czas na angielski! Zróbcie proszę lekcje ładnie, bez marudzenia!
        #language: pl
    mode: single
  - id: '1617358855300'
    alias: Home Assistant Update Notification for Android
    description: ''
    use_blueprint:
      path: fortepc/update-notif-for-android.yaml
      input:
        clickAction: https://my.home-assistant.io/redirect/supervisor/
        delay: 0
        notify_device: b0c171c0e7c87b51e2a35c49fd79e5ff
  - id: '1617367166600'
    alias: Motion Detected
    description: ''
    use_blueprint:
      path: vorion/send-camera-snapshot-notification-on-motion.yaml
      input:
        notification_message: '{{ motion_sensor_name }} - wykryto ruch!'
        motion_sensor: binary_sensor.camera1_motion
        camera: camera.camera1
        notify_device: b0c171c0e7c87b51e2a35c49fd79e5ff
        notification_title: Wykryto ruch!
        delay: 2
  - id: '1617387394300'
    alias: Frigate person detection notification
    description: ''
    trigger:
    - platform: mqtt
      topic: frigate/events
    condition:
      - condition: state
        entity_id: person.anarion
        state: "not_home"
    action:
    - service: notify.mobile_app_nokia_8_3_5g
      data_template:
        message: '{{trigger.payload_json["after"]["label"]}} wykryty w {{trigger.payload_json["after"]["camera"]}}'
        data:
          image: https://ha.anarion.pl/api/frigate/frigate/notifications/{{trigger.payload_json['after']['id']}}/snapshot.jpg
          tag: '{{trigger.payload_json["after"]["id"]}}'
          when: '{{trigger.payload_json["after"]["start_time"]|int}}'
          data:
            ttl: 0
            priority: high
    mode: single
  - id: '1618433673900'
    alias: Notify on device unavailable
    description: ''
    trigger:
    - platform: state
      entity_id:
      - binary_sensor.door_sensor_1_contact
      - binary_sensor.motion_sensor_1_battery_low
      - sensor.my_tp_switch_amps
      to: unavailable
      for: 0:05:00
    condition: []
    action:
    - service: notify.mobile_app_nokia_8_3_5g
      data:
        title: Urządzenie niedostępne!
        data:
          channel: Notfall
          priority: high
          ttl: 0
          color: red
        message: 📵 {{ state_attr(trigger.to_state.entity_id, 'friendly_name') }} jest niedostępne od 5 minut!
    mode: parallel
    max: 10
  - id: two_km_away
    alias: Someone is 2 kilometers away and heading home
    trigger:
    - platform: numeric_state
      entity_id:
      - proximity.janek_home
      - proximity.iwona_home
      below: '2'
    condition:
      and:
        - condition: template
          value_template: '{{ trigger.to_state.attributes.dir_of_travel  == "towards"
            }}'
    action:
    - service: tts.google_cloud_say
      data:
        message: '{{trigger.to_state.object_id[:-5] | capitalize}} jest już 2 kilometry
          od domu i zaraz będzie w domu!'
        entity_id: media_player.nest_mini
    - service: notify.mobile_app_nokia_8_3_5g
      data:
        message: '{{ trigger.to_state.object_id[:-5] | capitalize}} jest już 2 kilometry
          od domu i zaraz będzie na miejscu!'
    mode: single
  - id: trigger_alarm_while_armed
    alias: Trigger alarm while armed
    trigger:
    - platform: state
      entity_id: group.all_door_sensors
      to: 'on'
    - platform: state
      entity_id: group.all_motion_detectors
      to: 'on'
    condition:
    - condition: or
      conditions:
      - condition: state
        entity_id: alarm_control_panel.glowny_alarm
        state: armed_away
      - condition: state
        entity_id: alarm_control_panel.glowny_alarm
        state: armed_home
    action:
    - service: alarm_control_panel.alarm_trigger
      target:
        entity_id: alarm_control_panel.glowny_alarm
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm został wyzwolony! Wpisz poprawny kod!
        entity_id: media_player.nest_mini
    - service: light.turn_on
      data:
        entity_id: light.fire_tablet_screen
        brightness_pct: '{{ 90 if is_state(''sun.sun'', ''above_horizon'') else 60 }}'
    mode: single
  - id: send_notification_when_alarm_is_disarmed
    alias: Send notification when alarm is disarmed
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: disarmed
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm został rozbrojony!
        entity_id: media_player.nest_mini
  - id: send_notification_when_alarm_is_in_pending_status
    alias: Send notification when alarm is in pending status
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: pending
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm się włącza! Wpisz poprawny kod!
        entity_id: media_player.nest_mini
    - service: light.turn_on
      data:
        entity_id: light.fire_tablet_screen
        brightness_pct: '{{ 90 if is_state(''sun.sun'', ''above_horizon'') else 60 }}'
  - id: send_notification_when_alarm_is_armed_in_away_mode
    alias: Send notification when alarm is armed in away mode
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_away
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm uzbrojony!
        entity_id: media_player.nest_mini
  - id: send_notification_when_alarm_is_armed_in_home_mode
    alias: Send notification when alarm is armed in home mode
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_home
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm uzbrojony!
        entity_id: media_player.nest_mini
  - id: send_notification_when_alarm_is_triggered
    alias: Send notification when alarm is triggered
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: triggered
    action:
    - service: tts.google_cloud_say
      data:
        message: Uwaga, alarm został faktycznie wyzwolony!
        entity_id: media_player.nest_mini
    - service: notify.mobile_app_nokia_8_3_5g
      data:
        message: 'Uwaga: Alarm w domu został wyzwolony - {{ states(''sensor.date_time'')
          }}!'
        data:
          ttl: 0
          priority: high
    - service: light.turn_on
      data:
        entity_id: light.fire_tablet_screen
        brightness_pct: '{{ 90 if is_state(''sun.sun'', ''above_horizon'') else 60 }}'
  - id: stopa_bazowa_change_notification_up
    alias: Notify when stopa bazowa changes up
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.stopa_bazowa_pko_bp
    condition:
    - condition: template
      value_template: '{{ trigger.to_state.state | float > trigger.from_state.state
        | float }}'
    action:
    - service: notify.pushover
      data:
        message: Stopa bazowa zmieniła się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - device_id: b0c171c0e7c87b51e2a35c49fd79e5ff
      domain: mobile_app
      type: notify
      title: Zmiana stopy bazowej
      message: Stopa bazowa zmieniła się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: notify.email
      data:
        title: Zmiana stopy bazowej
        message: Stopa bazowa zmieniła się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.stopa_bazowa_rising
    mode: single
  - id: stopa_bazowa_change_notification_down
    alias: Notify when stopa bazowa changes down
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.stopa_bazowa_pko_bp
    condition:
    - condition: template
      value_template: '{{ trigger.to_state.state | float < trigger.from_state.state
        | float }}'
    action:
    - service: notify.pushover
      data:
        message: Stopa bazowa zmieniła się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - device_id: b0c171c0e7c87b51e2a35c49fd79e5ff
      domain: mobile_app
      type: notify
      title: Zmiana stopy bazowej
      message: Stopa bazowa zmieniła się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: notify.email
      data:
        title: Zmiana stopy bazowej
        message: Stopa bazowa zmieniła się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.stopa_bazowa_rising
    mode: single
  - id: wibor6m_change_notification_down
    alias: Notify when Wibor 6M changes down
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.wibor_6m
    condition:
    - condition: template
      value_template: '{{ trigger.to_state.state | float < trigger.from_state.state
        | float }}'
    action:
    - service: notify.pushover
      data:
        message: Wibor 6M zmienił się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - device_id: b0c171c0e7c87b51e2a35c49fd79e5ff
      domain: mobile_app
      type: notify
      title: Zmiana Wibor
      message: Wibor 6M zmienił się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: notify.email
      data:
        title: Zmiana Wibor
        message: Wibor 6M zmienił się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.wibor6m_rising
    mode: single
  - id: wibor6m_change_notification_up
    alias: Notify when Wibor 6M changes up
    description: ''
    trigger:
    - platform: state
      entity_id: sensor.wibor_6m
    condition:
    - condition: template
      value_template: '{{ trigger.to_state.state | float > trigger.from_state.state
        | float }}'
    action:
    - service: notify.pushover
      data:
        message: Wibor 6M zmienił się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - device_id: b0c171c0e7c87b51e2a35c49fd79e5ff
      domain: mobile_app
      type: notify
      title: Zmiana Wibor
      message: Wibor 6M zmienił się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: notify.email
      data:
        title: Zmiana Wibor
        message: Wibor 6M zmienił się z {{ trigger.from_state.state }}% na {{ trigger.to_state.state}}%!
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.wibor6m_rising
    mode: single
  - id: mute_ads
    alias: Mute Ads
    description: Mute ads while streaming music
    trigger:
    - platform: state
      entity_id:
      - media_player.nvidia_shield
      - media_player.plex_plex_for_android_tv_shield_android_tv
      - media_player.spotify_anarion
      - media_player.nest_mini
      - media_player.kd_55xe9305
      - media_player.sony_bravia_tv
      - media_player.chromecastaudio
      attribute: media_title
      to: Advertisement
    action:
    - service: media_player.volume_mute
      target:
        entity_id: '{{ trigger.to_state.entity_id }}

          '
      data:
        is_volume_muted: true
    - wait_for_trigger:
        platform: state
        entity_id:
        - media_player.nvidia_shield
        - media_player.plex_plex_for_android_tv_shield_android_tv
        - media_player.spotify_anarion
        - media_player.nest_mini
        - media_player.kd_55xe9305
        - media_player.sony_bravia_tv
        - media_player.chromecastaudio
        attribute: media_title
        from: Advertisement
    - service: media_player.volume_mute
      target:
        entity_id: '{{ trigger.to_state.entity_id }}

          '
      data:
        is_volume_muted: false
  - id: '1634040402000'
    alias: fullykiosk_disable_screen
    description: Turn off tablet screen after time-out
    trigger:
    - platform: state
      entity_id: light.fire_tablet_screen
      to: 'on'
      for:
        hours: 0
        minutes: 2
        seconds: 0
        milliseconds: 0
    condition: []
    action:
    - service: media_player.play_media
      target:
        entity_id: media_player.ffd92947_09fd7c47
      data:
        media_content_id: /local/sound/off.m4a
        media_content_type: music
    - service: light.turn_off
      target:
        entity_id: light.fire_tablet_screen
    - service: browser_mod.close_popup
    mode: restart
  - id: '1634041571300'
    alias: fullykiosk_enable_screen
    description: Turn on tablet screen on motion detected
    trigger:
    - platform: state
      entity_id: binary_sensor.ffd92947_09fd7c47
      from: 'off'
      to: 'on'
    condition:
    - condition: state
      entity_id: light.fire_tablet_screen
      state: 'off'
    action:
    - service: media_player.play_media
      target:
        entity_id: media_player.ffd92947_09fd7c47
      data:
        media_content_id: /local/sound/on.m4a
        media_content_type: music
    - service: light.turn_on
      data:
        entity_id: light.fire_tablet_screen
        brightness_pct: '{{ 90 if is_state(''sun.sun'', ''above_horizon'') else 60 }}'
    mode: restart
  - id: '1635431265500'
    alias: High CPU utlization
    description: ''
    trigger:
    - platform: numeric_state
      entity_id: sensor.processor_use_percent
      above: '99'
      for:
        hours: 0
        minutes: 10
        seconds: 0
        milliseconds: 0
    condition: []
    action:
    - device_id: b0c171c0e7c87b51e2a35c49fd79e5ff
      domain: mobile_app
      type: notify
      title: High Home Assistant CPU!
      message: Użycie procesora w HA było 100% przez 10 minut!
    mode: single
  - id: '1637682511628'
    alias: Bateria w tablecie
    description: Bateria w tablecie
    trigger:
    - platform: state
      entity_id: sensor.kftrwi_battery_level
    condition: []
    action:
    - choose:
      - conditions:
        - condition: numeric_state
          entity_id: sensor.kftrwi_battery_level
          above: '80'
        sequence:
        - service: switch.turn_off
          target:
            entity_id: switch.sonoff_1000d4b2e1_1
      - conditions:
        - condition: numeric_state
          entity_id: sensor.kftrwi_battery_level
          below: '20'
        sequence:
        - service: switch.turn_on
          target:
            entity_id: switch.sonoff_1000d4b2e1_1
      default: []
    mode: restart
  - id: 'sync_alarm_status'
    alias: sync_alarm_status
    description: Synchronize alarm status with keypad
    variables:
      pin_var: !secret main_alarm_code
    trigger:
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: arming
      id: panel_arming
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_home
      id: panel_armed_home
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: disarmed
      id: panel_disarmed
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: armed_away
      id: panel_armed_away
    - platform: state
      entity_id: alarm_control_panel.glowny_alarm
      to: pending
      id: panel_pending
    - platform: mqtt
      topic: zigbee2mqtt/alarm_keypad
      id: keypad_mqtt
    condition: []
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: panel_arming
        sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: alarm_control_panel.glowny_alarm
              state: armed_home
              attribute: next_state
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n  }\n\
                  }"
          - conditions:
            - condition: state
              entity_id: alarm_control_panel.glowny_alarm
              state: armed_away
              attribute: next_state
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"exit_delay\"\n  }\n}"
          default: []
        # - choose:
        #   default: !input 'action_arming'
      - conditions:
        - condition: trigger
          id: panel_armed_away
        sequence:
        - service: mqtt.publish
          data_template:
            topic: zigbee2mqtt/alarm_keypad/set
            payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n  }\n}"
        # - choose:
        #   default: !input 'action_armed_away'
      - conditions:
        - condition: trigger
          id: panel_disarmed
        sequence:
        - service: mqtt.publish
          data_template:
            topic: zigbee2mqtt/alarm_keypad/set
            payload: "{\n \"arm_mode\": \n  {\n    \"mode\": \"disarm\"\n  }\n}"
        # - choose:
        #   default: send_notification_when_alarm_is_disarmed
      - conditions:
        - condition: trigger
          id: panel_armed_home
        sequence:
        - service: mqtt.publish
          data_template:
            topic: zigbee2mqtt/alarm_keypad/set
            payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n  }\n}"
        # - choose:
        #   default: send_notification_when_alarm_is_armed_in_home_mode
      - conditions:
        - condition: trigger
          id: panel_pending
        sequence:
        # - choose:
        #   default: send_notification_when_alarm_is_in_pending_status
      - conditions:
        - condition: trigger
          id: keypad_mqtt
        sequence:
        - choose:
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_transaction != null and
                trigger.payload_json.action_code == pin_var }}'
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n    \"transaction\": \"{{ trigger.payload_json.action_transaction\
                  \ }}\",\n    \"mode\": \"{{ trigger.payload_json.action }}\"\n  }\n}"
        - choose:
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
                == "arm_all_zones" }}'
            sequence:
            - service: alarm_control_panel.alarm_arm_away
              target:
                entity_id: alarm_control_panel.glowny_alarm
              data:
                code: !secret main_alarm_code
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
                == "arm_day_zones" }}'
            sequence:
            - service: alarm_control_panel.alarm_arm_home
              target:
                entity_id: alarm_control_panel.glowny_alarm
              data:
                code: !secret main_alarm_code
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code == pin_var and trigger.payload_json.action
                == "disarm" }}'
            sequence:
            - service: alarm_control_panel.alarm_disarm
              target:
                entity_id: alarm_control_panel.glowny_alarm
              data:
                code: !secret main_alarm_code
          # - conditions:
          #   - condition: template
          #     value_template: '{{ trigger.payload_json.action == "panic" }}'
          #   sequence:
          #   - choose:
          #     default: !input 'action_panic'
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action_code != pin_var and trigger.payload_json.action_code
                | int(-1) != -1 }}'
            sequence:
            - service: mqtt.publish
              data_template:
                topic: zigbee2mqtt/alarm_keypad/set
                payload: "{\n \"arm_mode\": \n  {\n   \"transaction\": \"{{ trigger.payload_json.action_transaction\
                  \ }}\",\n   \"mode\": \"invalid_code\"\n  }\n}"
          - conditions:
            - condition: template
              value_template: '{{ trigger.payload_json.action == None }}'
            sequence:
            - choose:
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_away
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n\
                      \  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_home
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n\
                      \  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: disarmed
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"disarm\"\n  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: arming
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_home
                  attribute: next_state
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_day_zones\"\n\
                      \  }\n}"
              - conditions:
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: arming
                - condition: state
                  entity_id: alarm_control_panel.glowny_alarm
                  state: armed_away
                  attribute: next_state
                sequence:
                - service: mqtt.publish
                  data_template:
                    topic: zigbee2mqtt/alarm_keypad/set
                    payload: "{\n \"arm_mode\": \n  {\n   \"mode\": \"arm_all_zones\"\n\
                      \  }\n}"
          default: []
      default: []
    mode: parallel
    max: 10
  # - alias: Komfovent Set Normal Temperature Input Number
  #   description: 'Set the input number to the Normal Setpoint value on HA start and if changed elsewhere (app or web)'
  #   trigger:
  #     - platform: homeassistant
  #       event: start
  #     - platform: state
  #       entity_id: sensor.komfovent_status_normal_setpoint_c
  #   condition: []
  #   action:
  #     - service: input_number.set_value
  #       data:
  #         value: '{{states.sensor.komfovent_status_normal_setpoint_c.state}}'
  #       target:
  #         entity_id: input_number.komfovent_set_temp
  #   mode: single

  - alias: Komfovent Write Normal Temp Setpoint on Input change
    description: 'Write Normal Setpoint when input_number changes'
    trigger:
      - platform: state
        entity_id: input_number.komfovent_set_temp
    condition: []
    action:
      - service: script.komfovent_write_temp_setpoint_normal
        data:
          komfovent_temp_setpoint: '{{(states.input_number.komfovent_set_temp.state | float(0.0) * 10) | int(0)}}'
    mode: single

  # - alias: Komfovent Set Normal Fan Input Number
  #   description: 'Set the input number to the Extract Normal Fan Setpoint value on HA start and if changed elsewhere (app or web)'
  #   trigger:
  #     - platform: homeassistant
  #       event: start
  #     - platform: state
  #       entity_id: sensor.komfovent_status_normal_setpoint_c
  #   condition: []
  #   action:
  #     - service: input_number.set_value
  #       data:
  #         value: '{{(states.sensor.komfovent_extract_fan_intensivity.state | round(0))}}'
  #       target:
  #         entity_id: input_number.komfovent_set_fan
  #   mode: single

  - alias: Komfovent Write Normal Fan Setpoint on Input change
    description: 'Write Normal Fan Setpoint (Sup & Extract) when input_number changes'
    trigger:
      - platform: state
        entity_id: input_number.komfovent_set_fan
    condition: []
    action:
      - service: script.komfovent_write_fan_intensity_normal
        data:
          komfovent_fan_intensity: ["0","{{states.input_number.komfovent_set_fan.state}}"]
    mode: single

  - alias: Komfovent Record daily Heater consumption kWh
    description: ''
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.komfovent_heater_consumption_day_kwh
        to: '0'
    condition: []
    action:
      - service: number.set_value
        data: {}

  - id: 'Garbage Load'
    alias: Import dat do integracji garbage
    description: Import dat do integracji garbage
    trigger:
      - platform: webhook
        webhook_id: "garbage"
    condition: []
    action:
    - variables:
        include: >
          "2021-01-04
          2021-01-18
          2021-02-01
          2021-02-15
          2021-03-01
          2021-03-15
          2021-03-29
          2021-04-12
          2021-04-26
          2021-05-10
          2021-05-24
          2021-06-07
          2021-06-21
          2021-07-05
          2021-07-19
          2021-08-02
          2021-08-16
          2021-08-30
          2021-09-13
          2021-09-27
          2021-10-11
          2021-10-25
          2021-11-08
          2021-11-22
          2021-12-06
          2021-12-20"
    - alias: "Iterate through the lines to include"
      repeat:
        count: "{{ include.split('\n') | count }}"
        sequence:
          - alias: "Add the date"
            service: garbage_collection.add_date
            data:
              entity_id: sensor.smieci_zmieszane
              date: "{{ include.split('\n')[repeat.index-1] }}"
    - alias: "Update the garbage_collection entity"
      service: garbage_collection.update_state
      data:
        entity_id: sensor.smieci_zmieszane
    mode: parallel

  # - id: 'powiadomnie o smieciach bio'
  #   alias: Powiadomienie o śmieciach BIO
  #   description: 'Powiadomienie o śmieciach BIO'
  #   trigger:
  #   - platform: time
  #     at: '19:00'
  #   condition:
  #     - condition: state
  #       entity_id: sensor.smieci_bio
  #       attribute: days
  #       state: 1
  #   action:
  #   - service: input_boolean.turn_on
  #     target:
  #       entity_id: input_boolean.garbage_reminder
  #   - alias: "Powiadamiaj dopóki śmieci nie wyniesione"
  #     repeat:
  #       while:
  #         - condition: state
  #           entity_id: input_boolean.garbage_reminder
  #           state: "on"
  #       sequence:
  #         - service: logbook.log
  #           data:
  #             name: Powiadomienie o śmieciach
  #             message: Powiadomienie wysłane
  #             entity_id: input_boolean.garbage_reminder
  #         - service: tts.google_cloud_say
  #           data:
  #             entity_id: media_player.nest_mini
  #             message: Trzeba wystawić śmieci BIO, jutro odbiór!
  #         - service: notify.anarion_iwona_phones
  #           data:
  #             message: Trzeba wystawić śmieci BIO!
  #             data:
  #               actions:
  #                 - title: "Śmieci wystawione"
  #                   action: "wystawione"
  #               tag: input_boolean.garbage_reminder
  #         - wait_for_trigger:
  #             - platform: event
  #               event_type: mobile_app_notification_action
  #               event_data:
  #                 action: "wystawione"
  #             - platform: state
  #               entity_id: input_boolean.garbage_reminder
  #               to: "off"
  #           timeout:
  #             minutes: 30
  #         - choose:
  #             - conditions: "{{ wait.trigger.event.data.action == 'wystawione' }}"
  #               sequence:
  #                 - service: input_boolean.turn_off
  #                   target:
  #                     entity_id: input_boolean.garbage_reminder
  #                 - service: logbook.log
  #                   data:
  #                     name: "Śmieci wystawione"
  #                     message: "Śmieci wystawione"
  #                     entity_id: input_boolean.garbage_reminder
  #           default:
  #             - service: notify.anarion_iwona_phones
  #               data:
  #                 message: "clear_notification"
  #                 data:
  #                   tag: input_boolean.garbage_reminder
  #             - service: logbook.log
  #               data:
  #                 name: "Śmieci wystawione"
  #                 message: "Śmieci wystawione"
  #                 entity_id: input_boolean.garbage_reminder

  # - id: 'powiadomnie o smieciach zmieszanych'
  #   alias: Powiadomienie o śmieciach zmieszanych
  #   description: 'Powiadomienie o śmieciach zmieszanych'
  #   trigger:
  #   - platform: time
  #     at: '19:00'
  #   condition:
  #     - condition: state
  #       entity_id: sensor.zmieszane
  #       attribute: days
  #       state: 1
  #   action:
  #   - service: input_boolean.turn_on
  #     target:
  #       entity_id: input_boolean.garbage_reminder
  #   - alias: "Powiadamiaj dopóki śmieci nie wyniesione"
  #     repeat:
  #       while:
  #         - condition: state
  #           entity_id: input_boolean.garbage_reminder
  #           state: "on"
  #       sequence:
  #         - service: logbook.log
  #           data:
  #             name: Powiadomienie o śmieciach
  #             message: Powiadomienie wysłane
  #             entity_id: input_boolean.garbage_reminder
  #         - service: tts.google_cloud_say
  #           data:
  #             entity_id: media_player.nest_mini
  #             message: Trzeba wystawić śmieci zmieszane, jutro odbiór!
  #         - service: notify.anarion_iwona_phones
  #           data:
  #             message: Trzeba wystawić śmieci zmieszane!
  #             data:
  #               actions:
  #                 - title: "Śmieci wystawione"
  #                   action: "wystawione"
  #               tag: input_boolean.garbage_reminder
  #         - wait_for_trigger:
  #             - platform: event
  #               event_type: mobile_app_notification_action
  #               event_data:
  #                 action: "wystawione"
  #             - platform: state
  #               entity_id: input_boolean.garbage_reminder
  #               to: "off"
  #           timeout:
  #             minutes: 30
  #         - choose:
  #             - conditions: "{{ wait.trigger.event.data.action == 'wystawione' }}"
  #               sequence:
  #                 - service: input_boolean.turn_off
  #                   target:
  #                     entity_id: input_boolean.garbage_reminder
  #                 - service: logbook.log
  #                   data:
  #                     name: "Śmieci wystawione"
  #                     message: "Śmieci wystawione"
  #                     entity_id: input_boolean.garbage_reminder
  #           default:
  #             - service: notify.anarion_iwona_phones
  #               data:
  #                 message: "clear_notification"
  #                 data:
  #                   tag: input_boolean.garbage_reminder
  #             - service: logbook.log
  #               data:
  #                 name: "Śmieci wystawione"
  #                 message: "Śmieci wystawione"
  #                 entity_id: input_boolean.garbage_reminder

  # - id: 'powiadomnie o smieciach segregowanych'
  #   alias: Powiadomienie o śmieciach segregowanych
  #   description: 'Powiadomienie o śmieciach segregowanych'
  #   trigger:
  #   - platform: time
  #     at: '19:00'
  #   condition:
  #     - condition: state
  #       entity_id: sensor.smieci_segregowane
  #       attribute: days
  #       state: 1
  #   action:
  #   - service: input_boolean.turn_on
  #     target:
  #       entity_id: input_boolean.garbage_reminder
  #   - alias: "Powiadamiaj dopóki śmieci nie wyniesione"
  #     repeat:
  #       while:
  #         - condition: state
  #           entity_id: input_boolean.garbage_reminder
  #           state: "on"
  #       sequence:
  #         - service: logbook.log
  #           data:
  #             name: Powiadomienie o śmieciach
  #             message: Powiadomienie wysłane
  #             entity_id: input_boolean.garbage_reminder
  #         - service: tts.google_cloud_say
  #           data:
  #             entity_id: media_player.nest_mini
  #             message: Trzeba wystawić śmieci segregowane, jutro odbiór!
  #         - service: notify.anarion_iwona_phones
  #           data:
  #             message: Trzeba wystawić śmieci segregowane!
  #             data:
  #               actions:
  #                 - title: "Śmieci wystawione"
  #                   action: "wystawione"
  #               tag: input_boolean.garbage_reminder
  #         - wait_for_trigger:
  #             - platform: event
  #               event_type: mobile_app_notification_action
  #               event_data:
  #                 action: "wystawione"
  #             - platform: state
  #               entity_id: input_boolean.garbage_reminder
  #               to: "off"
  #           timeout:
  #             minutes: 30
  #         - choose:
  #             - conditions: "{{ wait.trigger.event.data.action == 'wystawione' }}"
  #               sequence:
  #                 - service: input_boolean.turn_off
  #                   target:
  #                     entity_id: input_boolean.garbage_reminder
  #                 - service: logbook.log
  #                   data:
  #                     name: "Śmieci wystawione"
  #                     message: "Śmieci wystawione"
  #                     entity_id: input_boolean.garbage_reminder
  #           default:
  #             - service: notify.anarion_iwona_phones
  #               data:
  #                 message: "clear_notification"
  #                 data:
  #                   tag: input_boolean.garbage_reminder
  #             - service: logbook.log
  #               data:
  #                 name: "Śmieci wystawione"
  #                 message: "Śmieci wystawione"
  #                 entity_id: input_boolean.garbage_reminder

  - id: 'powiadomnie o smieciach'
    alias: Powiadomienie o śmieciach
    description: 'Powiadomienie o śmieciach'
    trigger:
    - platform: time
      at: '19:00'
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.smieci_bio
            attribute: days
            state: 1
          - condition: state
            entity_id: sensor.zmieszane
            attribute: days
            state: 1
          - condition: state
            entity_id: sensor.smieci_segregowane
            attribute: days
            state: 1
    action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.garbage_reminder
    - alias: "Powiadamiaj dopóki śmieci nie wyniesione"
      repeat:
        while:
          - condition: state
            entity_id: input_boolean.garbage_reminder
            state: "on"
        sequence:
          - service: logbook.log
            data:
              name: Powiadomienie o śmieciach
              message: Powiadomienie wysłane
              entity_id: input_boolean.garbage_reminder
          - service: tts.google_cloud_say
            data:
              entity_id: media_player.nest_mini
              message:
                Trzeba wystawić śmieci
                {% if state_attr('sensor.smieci_bio', 'days') == 1 -%}
                  {{ "bio, " }}
                {% endif %}
                {% if state_attr('sensor.smieci_segregowane', 'days') == 1 %}
                  {{ "segregowane, " }}
                {% endif %}
                {% if state_attr('sensor.zmieszane', 'days') == 1 %}
                  {{ "zmieszane "}}
                {%- endif %}
          - service: notify.anarion_iwona_phones
            data:
              message:
                Trzeba wystawić śmieci
                {% if state_attr('sensor.smieci_bio', 'days') == 1 -%}
                  {{ "bio, " }}
                {% endif %}
                {% if state_attr('sensor.smieci_segregowane', 'days') == 1 %}
                  {{ "segregowane, " }}
                {% endif %}
                {% if state_attr('sensor.zmieszane', 'days') == 1 %}
                  {{ "zmieszane "}}
                {%- endif %}
              data:
                actions:
                  - title: "Śmieci wystawione"
                    action: "wystawione"
                tag: input_boolean.garbage_reminder
          - wait_for_trigger:
              - platform: event
                event_type: mobile_app_notification_action
                event_data:
                  action: "wystawione"
              - platform: state
                entity_id: input_boolean.garbage_reminder
                to: "off"
            timeout:
              minutes: 30
          - choose:
              - conditions: "{{ wait.trigger.event.data.action == 'wystawione' }}"
                sequence:
                  - service: input_boolean.turn_off
                    target:
                      entity_id: input_boolean.garbage_reminder
                  - service: logbook.log
                    data:
                      name: "Śmieci wystawione"
                      message: "Śmieci wystawione"
                      entity_id: input_boolean.garbage_reminder
            default:
              - service: notify.anarion_iwona_phones
                data:
                  message: "clear_notification"
                  data:
                    tag: input_boolean.garbage_reminder
              - service: logbook.log
                data:
                  name: "Śmieci wystawione"
                  message: "Śmieci wystawione"
                  entity_id: input_boolean.garbage_reminder
