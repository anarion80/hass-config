climate_base:
  show_icon: false
  styles:
    name:
      - padding: 12px 13px
      - font-size: 0.8em
      - font-weight: 600
    card:
      - border-radius: 10px

climate_fan_mode:
  variables:
    fan_mode: false
  tap_action:
    action: call-service
    service: climate.set_fan_mode
    service_data:
      entity_id: >
        [[[ return !entity || entity.entity_id; ]]]
      fan_mode: >
        [[[ return variables.fan_mode; ]]]
  styles:
    card:
      - background-color: >
          [[[
            return !entity || entity.attributes.fan_mode === variables.fan_mode
                ? "rgba(158, 158, 158, 0.2)"
                : "rgba(189, 189, 189, 0.05)";
          ]]]
  template:
    - climate_base

climate_swing_mode:
  tap_action:
    action: call-service
    service: climate.set_swing_mode
    service_data:
      entity_id: >
        [[[ return !entity || entity.entity_id; ]]]
      swing_mode: >
        [[[
          return !entity || entity.attributes.swing_mode === 'off'
              ? 'on'
              : 'off';
        ]]]
  styles:
    card:
      - background-color: >
          [[[
            return !entity || entity.attributes.swing_mode === "on"
                ? "rgba(158, 158, 158, 0.2)"
                : "rgba(189, 189, 189, 0.05)";
          ]]]
  template:
    - climate_base


climate:
  template:
    - circle
  custom_fields:
    circle: >
      [[[
        if (entity && entity.attributes.temperature && entity.attributes.current_temperature) {
          let input = variables.circle_input == null ? ' ' : `${parseInt(variables.circle_input)}<tspan font-size="10">°C</tspan>`,
            stroke_color = variables.state === 'cool' || variables.state === 'fan_only' ? '#b2b2b2' : 'none',
            fill_color = variables.state === 'off' ? 'rgba(255,255,255,0.04)' : 'none';
          return `
            <svg viewBox="0 0 50 50">
              <circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
              <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}</text>
            </svg>
          `;
        }
      ]]]

temperature:
  custom_fields:
    circle: >
      [[[
        let input = variables.circle_input == null ? ' ' : `${parseInt(variables.circle_input)}<tspan font-size="10">°C</tspan>`;
        let stroke_color = variables.state === 'cool' ? '#b2b2b2' : 'none';
        let fill_color = variables.state === 'off' ? 'rgba(255,255,255,0.04)' : 'none';
        return `
          <svg viewBox="0 0 50 50">
            <circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}</text>
          </svg>
        `;
      ]]]
  styles:
    custom_fields:
      circle:
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1

humidity:
  custom_fields:
    circle: >
      [[[
        let input = variables.circle_input == null ? ' ' : `${parseInt(variables.circle_input)}<tspan font-size="10">%</tspan>`;
        let stroke_color = '#b2b2b2';
        let fill_color = 'rgba(255,255,255,0.04)';
        return `
          <svg viewBox="0 0 50 50">
            <circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}</text>
          </svg>
        `;
      ]]]
  styles:
    custom_fields:
      circle:
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1

temperature_chart:
  tap_action:
    action: fire-dom-event
    browser_mod:
      service: browser_mod.popup
      data:
        title: >
          [[[
            return !entity || entity.attributes.friendly_name;
          ]]]
        size: wide
        card_mod:
          style:
            hui-vertical-stack-card:
              $: |
                #root {
                  padding: 1.5em;
                }

        content:
          type: vertical-stack
          cards:
            - type: custom:apexcharts-card
              graph_span: 48h
              apex_config:
                tooltip:
                  style:
                    fontSize: 14px
                  x:
                    show: true
                    formatter: |
                      EVAL:(timestamp) => {
                        let date = new Date(timestamp).toLocaleString('pl-PL',{year: 'numeric', month:'long'}).toString()
                        return date.charAt(0).toUpperCase() + date.slice(1);
                      }
                title:
                  text: 🌡️ Temperatura [°C]
                  style:
                    color: white
                    fontSize: 24px
                    fontWeight: 700
                chart:
                  height: 300px
                  fontFamily: SF Text
                colors:
                  - '#385581'
                  - '#c0392b'
                  - '#32a852'
                  - '#d35400'
                fill:
                  type: gradient
                  gradient:
                    type: vertical
                    shadeIntensity: 0.2
                    opacityFrom: 1
                    opacityTo: 0.7
                    stops:
                      - 0
                      - 70
                      - 100
                    # gradientToColors:
                    #   - '#d35400'
              experimental:
                color_threshold: true
              header:
                show: false
                title: ApexCharts-Card
                show_states: true
                #colorize_states: true
              #yaxis:
                # - id: temp # identification name of the first y-axis
                #   decimals: 0
                #   apex_config:
                #     tickAmount: 4
              series:
                - entity: >
                    [[[ return !entity || entity.entity_id; ]]]
                  #yaxis_id: temp
                  fill_raw: last
                  type: area
                  group_by:
                    func: last
                    fill: last
                  color_threshold:
                    - value: 20
                      color: '#385581'
                    - value: 22
                      color: '#32a852'
                    - value: 24
                      color: '#d35400'
                    - value: 26
                      color: '#c0392b'
