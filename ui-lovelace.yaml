button_card_templates:
  !include_dir_merge_named button_card_templates

views:
  - type: custom:grid-layout
    path: 0
    layout:
      #default
      margin: 0
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .       .       ."
        "sidebar  living_room  studio  bedroom  ."
        "sidebar  media       other  home   ."
        "sidebar  footer      footer  footer  ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .        ."
            ".  sidebar     sidebar  ."
            ".  living_room  bedroom   ."
            ".  studio      other   ."
            ".  media       home    ."
            ".  footer      footer   ."
            ".  .           .        ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .       ."
            "sidebar  living_room  bedroom  ."
            "sidebar  studio      other  ."
            "sidebar  media       home   ."
            "sidebar  footer      footer  ."
            "sidebar  .           .       ."
    cards:
      #extra_styles fix, do not remove
      #also warn if theme is not set

      - type: custom:button-card
        view_layout:
          grid-area: 1 / 2 / 2 / 5
        name: SET THEME TO "tablet" IN PROFILE
        tap_action:
          action: navigate
          navigation_path: /profile
        styles:
          card:
            - display: >
                [[[
                  return hass.themes.theme === 'tablet'
                      ? 'none'
                      : 'initial';
                ]]]
          name:
            - z-index: 1
            - overflow: visible
            - color: red
            - font-weight: bolder
            - font-size: xxx-large
            - background: yellow

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:button-card
            entity: sensor.template_sidebar
            name: '[[[ return entity.attributes.time; ]]]'
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.date;
                   ]]]
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.greet;
                   ]]]
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.active;
                   ]]]
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.open;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/doors.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.laundry;
                   ]]]
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.weather;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/weather.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.battery;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/footer_batteries.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.garbage;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/garbage.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: |
               [[[
                   return entity.attributes.calendar;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/home_calendar.yaml
            style: |
              #name {
                margin-top: calc(var(--sidebar-line-height) * -1);
                white-space: pre-line;
              }


          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.plex;
                   ]]]
            template: sidebar

          - type: conditional
            view_layout:
              grid-area: sidebar
            conditions:
              - entity: input_boolean.laundry_display
                state: 'on'
            card:
              type: custom:button-card
              entity: timer.laundry
              double_tap_action:
                action: call-service
                service: input_boolean.turn_off
                service_data:
                  entity_id: input_boolean.laundry_display
              template: laundry

          # - type: grid
          #   view_layout:
          #     grid-area: sidebar
          #   cards:
          #     - type: button
          #       icon: mdi:robot-vacuum
          #       tap_action:
          #         !include popup/sidebar_vacuum.yaml
          #       double_tap_action:
          #         action: none
          #     - type: button
          #       icon: mdi:bell-circle-outline
          #       tap_action:
          #         !include popup/history.yaml
          #       double_tap_action:
          #         action: none

          #     - type: button
          #       icon: mdi:information-outline
          #       tap_action:
          #         !include popup/sidebar_information.yaml
          #       double_tap_action:
          #         action: none

          #     - type: button
          #       icon: mdi:arrow-up-bold-circle-outline
          #       tap_action:
          #         !include popup/sidebar_update2.yaml
          #       double_tap_action:
          #         action: none
          #       variables:
          #         notify: >
          #           [[[
          #             let hass_installed = hass.config.version,
          #               hass_version_latest = states['sensor.hass_version_latest'],
          #               hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
          #               hacs = states['sensor.hacs'];
          #             if (hass_version_latest && hass_version_latest.state.includes('.')
          #               && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
          #               && hacs && Number.isInteger(parseInt(hacs.state))) {
          #               let hass_latest = hass_installed.includes('b')
          #                   ? hass_version_latest_beta.state
          #                   : hass_version_latest.state,
          #                 hass_count = hass_installed !== hass_latest ? 1 : 0;
          #               return hass_count + parseInt(hacs.state);
          #             }
          #             return 0;
          #           ]]]

      #################################################
      #                                               #
      #                  living_room                  #
      #                                               #
      #################################################

      - type: grid
        title: Salon
        view_layout:
          grid-area: living_room
        columns: 1
        cards:
          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:
              - type: grid
                columns: 2
                cards:
                - type: custom:button-card
                  entity: sensor.ventilation_info
                  name: Wentylacja
                  triggers_update:
                    - sensor.ventilation_info
                  tap_action:
                    !include popup/ventilation.yaml
                  template:
                    - base
                    - icon_fan
                    - full_circle
                  variables:
                    circle_input: >
                      [[[
                        return entity === undefined ?
                          null :
                          parseInt(states['sensor.komfovent_extract_temperature_c'].state);
                      ]]]
                    circle_input_unit: 'Â°C'
                    speed: >
                      [[[
                        return entity === undefined ?
                          null :
                          entity.state;
                      ]]]

                - type: custom:button-card
                  entity: fan.zhimi_airpurifier_v7
                  name: Oczyszczacz powietrza
                  double_tap_action:
                    !include popup/sovrum_luftrenare.yaml
                  template:
                    - base
                    - icon_air_purifier
                    - full_circle
                    - loader
                  triggers_update:
                    - sensor.airpurifier_pm2_5
                    - fan.zhimi_airpurifier_v7
                  variables:
                    circle_input: >
                      [[[
                        return entity === undefined ?
                          null :
                          parseInt(states['sensor.airpurifier_pm2_5'].state);
                      ]]]
                    circle_input_unit: ''

                - type: custom:button-card
                  entity: media_player.sony_kd_55xe9305
                  name: TV
                  state_display: >
                    [[[
                      if (variables.state === 'playing') {
                        return 'wÅ.';
                      }
                      if (variables.state === true) {
                        return variables.translate_unknown;
                      }
                    ]]]
                  double_tap_action:
                    !include popup/vardagsrum_tv.yaml
                  template:
                    - base
                    - icon_tv
                    - loader
                    - media_source
                  variables:
                    circle: >
                      [[[
                        return entity === undefined ?
                          null :
                          entity.attributes.source;
                      ]]]

                - type: custom:button-card
                  entity: sensor.komfovent_status_panel_temperature
                  name: Temperatura
                  double_tap_action: none
                  tap_action:
                    !include popup/salon_klimat.yaml
                  template:
                    - base
                    - icon_temperature
                    - full_circle
                    - graph
                  custom_fields:
                    graph:
                      card:
                        entities:
                          - sensor.komfovent_status_panel_temperature
                  variables:
                    circle_input: >
                      [[[
                        let humidity = states['sensor.komfovent_status_panel_humidity'];
                        if (humidity) return parseInt(humidity.state);
                      ]]]
                    circle_input_unit: '%'

              - type: grid
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: switch.plex
                    name: Plex
                    tap_action:
                      action: toggle
                      entity: entity
                    template:
                      - base
                      #- media
                      - icon_plex
                  - type: custom:button-card
                    entity: switch.radio
                    name: Radio
                    tap_action:
                      action: toggle
                      entity: entity
                    template:
                      - base
                      #- media
                      - icon_radio2
                      - loader

                  - type: custom:button-card
                    entity: switch.netflix
                    name: Netflix
                    tap_action:
                      action: toggle
                      entity: entity
                    template:
                      - base
                      #- media
                      - icon_netflix4
                      - loader

                  - type: custom:button-card
                    entity: switch.chromecast_audio
                    name: ChromecastAudio
                    tap_action:
                      action: toggle
                      entity: entity
                    template:
                      - base
                      #- media
                      - icon_chromecast
                      - loader

          # - type: custom:button-card
          #   entity: climate.living_room_ac
          #   name: Klima
          #   double_tap_action:
          #     !include popup/livingroom_ac.yaml
          #   template:
          #     - base
          #     - icon_ac
          #     - full_circle
          #     - loader
          #   variables:
          #     circle_input: >
          #       [[[
          #         return entity === undefined ?
          #           null :
          #           parseFloat(entity.attributes.current_temperature);
          #       ]]]

      #################################################
      #                                               #
      #                    GABINET                    #
      #                                               #
      #################################################

      - type: grid
        title: Gabinet
        view_layout:
          grid-area: studio
        columns: 2
        cards:

          - type: custom:button-card
            entity: light.lampka_u_hani
            name: U Hani
            template:
              - base
              - icon_shade

          - type: custom:button-card
            entity: sensor.gabinet_temperature
            name: Temperatura
            double_tap_action: none
            tap_action:
              !include popup/gabinet_klimat.yaml
            custom_fields:
              graph:
                card:
                  entities:
                    - sensor.gabinet_temperature
            template:
              - base
              - icon_temperature
              - full_circle
              - graph
            variables:
              circle_input: >
                [[[
                  let humidity = states['sensor.gabinet_humidity'];
                  if (humidity) return parseInt(humidity.state);
                ]]]
              circle_input_unit: '%'


          - type: custom:button-card
            entity: switch.radio
            name: Radio
            double_tap_action:
              !include popup/radio.yaml
            template:
              - base
              - icon_radio2
              - loader
              - lock
            variables:
              lock: >
                [[[
                  let lock = states['lock.dator'];
                  return !lock || lock.state;
                ]]]
              trigger: >
                [[[
                  let trigger = states['script.home_leave'];
                  return !trigger || trigger;
                ]]]
          # - type: custom:button-card
          #   entity: sensor.gabinet_temperature
          #   graph:
          #   template:
          #     - base
          #     - icon_temperature
          #     - full_circle
          #   show_name: true
          #   show_state: false
          #   custom_fields:
          #     graph:
          #       card:
          #         type: 'custom:mini-graph-card'
          #         color_thresholds:
          #         - value: 21.5
          #           color: "#307FFD"
          #         - value: 22.5
          #           color: "#018001"
          #         - value: 23.5
          #           color: "#FF9801"
          #         entities:
          #           - "[[[ return variables.entity_id; ]]]"
          #         line_width: 4
          #         animate: true
          #         hours_to_show: 24
          #         points_per_hour: 1
          #         height: 140
          #         align_icon: left
          #         align_header: left
          #         show:
          #           name: false
          #           icon: false
          #           state: false
          #           legend: false
          #           labels: false
          #   tap_action:
          #     action: call-service
          #     service: browser_mod.popup
          #     service_data:
          #       title: '[[[ return "Klimat " + variables.title ]]]'
          #       style:
          #         .: |
          #           :host .content {
          #             width: calc(385px + 385px);
          #             max-width: 90vw;
          #           }
          #       card:
          #         type: custom:layout-card
          #         layout_type: custom:grid-layout
          #         layout:
          #           grid-template-columns: repeat(2, 1fr)
          #           grid-template-rows: 1fr
          #           grid-template-areas: |
          #             "temperature  humidity"
          #           mediaquery:
          #             #phone
          #             "(max-width: 800px)":
          #               grid-template-columns: 1fr
          #               grid-template-rows: repeat(3, 1fr)
          #               grid-template-areas: |
          #                 "temperature"
          #                 "humidity"
          #         cards:
          #         - type: entities
          #           view_layout:
          #             grid-area: temperature
          #           title: Temperatura
          #           show_header_toggle: false
          #           card_mod:
          #             class: header
          #             style: |
          #               ha-card {
          #                 margin: 0px !important;
          #               }
          #               h1 {
          #                 padding: 1em 0 0 1.3em !important;
          #               }
          #           entities:
          #             - type: custom:mini-graph-card
          #               entities:
          #                 - "[[[ return variables.entity_id; ]]]"
          #               animate: true
          #               hours_to_show: 24
          #               points_per_hour: 1
          #               height: 200
          #               hour24: true
          #               action: none
          #               color_thresholds:
          #               - value: 21.5
          #                 color: "#307FFD"
          #               - value: 22.5
          #                 color: "#018001"
          #               - value: 23.5
          #                 color: "#FF9801"
          #               show:
          #                 graph: line
          #                 icon: false
          #                 name: false
          #                 labels: false
          #                 points: hover
          #                 extrema: true
          #                 average: true
          #                 labels_secondary: false

          #         - type: entities
          #           view_layout:
          #             grid-area: humidity
          #           title: WilgotnoÅÄ
          #           show_header_toggle: false
          #           card_mod:
          #             class: header
          #             style: |
          #               ha-card {
          #                 margin: 0px !important;
          #               }
          #               h1 {
          #                 padding: 1em 0 0 1.3em !important;
          #               }
          #           entities:
          #           - type: custom:mini-graph-card
          #             entities:
          #               - sensor.gabinet_humidity
          #             animate: true
          #             hours_to_show: 24
          #             points_per_hour: 1
          #             height: 200
          #             hour24: true
          #             action: none
          #             color_thresholds:
          #             - value: 40
          #               color: "#307FFD"
          #             - value: 50
          #               color: "#018001"
          #             - value: 60
          #               color: "#FF9801"
          #             show:
          #               graph: line
          #               icon: false
          #               name: false
          #               labels: false
          #               points: hover
          #               extrema: true
          #               average: true
          #               labels_secondary: false
          #   variables:
          #     title: Gabinet
          #     circle_input: >
          #       [[[
          #         return entity === undefined ?
          #           null :
          #           `${Math.round(parseFloat(entity.state))}<tspan font-size="10">Â°C</tspan>`;
          #       ]]]
          #   styles:
          #     name:
          #       - margin-bottom: 2.1vw
          #       - color: rgb(239, 239, 239)
          #       - text-shadow: rgb(18 22 23 / 90%) 1px 1px 5px

          #     custom_fields:
          #       graph:
          #         [
          #           position: absolute,
          #           bottom: 0,
          #           left: 0,
          #           width: 100%,
          #           padding-top: 0,
          #         ]

          - type: custom:button-card
            entity: switch.zraszacz
            name: Zraszacz
            template:
              - base
              - icon_sprinkler3

      #################################################
      #                                               #
      #                    SECURITY                   #
      #                                               #
      #################################################

      - type: grid
        title: Ochrona
        view_layout:
          grid-area: bedroom
        columns: 2
        cards:

          # - type: custom:frigate-card
          #   cameras:
          #     - camera_entity: camera.main_2
          #     # - camera_entity: camera.main_2
          #     #   live_provider: webrtc-card
          #     #   title: Front Door (WebRTC)
          #     #   webrtc_card:
          #     #     url: 'rtsp://homeassistant:pKP3wbpQVefjcS@192.168.2.48:554/h264Preview_01_main'
          #     #   id: front-door-webrtc
          #   view:
          #     default: live
          #     timeout_seconds: 15
          #     update_seconds: 5
          #     update_force: false
          #     actions:
          #       tap_action:
          #         action: custom:frigate-card-action
          #         frigate_card_action: fullscreen
          #   dimensions:
          #     aspect_ratio_mode: static
          #     aspect_ratio: '1/1'
          #   # live:
          #   #   webrtc_card:
          #   #     ui: true
          #   menu:
          #     style: none
          #   live:
          #     controls:
          #       thumbnails:
          #         mode: none
          #       title:
          #         mode: none
          #   card_mod:
          #     style: |
          #       :host {
          #         border-radius: var(--custom-button-card-border-radius);
          #       }

          # - type: custom:frigate-card
          #   cameras:
          #     - camera_entity: camera.garage_2
          #     # - camera_entity: camera.main_2
          #     #   live_provider: webrtc-card
          #     #   title: Front Door (WebRTC)
          #     #   webrtc_card:
          #     #     url: 'rtsp://homeassistant:pKP3wbpQVefjcS@192.168.2.48:554/h264Preview_01_main'
          #     #   id: front-door-webrtc
          #   view:
          #     default: live
          #     timeout_seconds: 15
          #     update_seconds: 5
          #     update_force: false
          #     actions:
          #       tap_action:
          #         action: custom:frigate-card-action
          #         frigate_card_action: fullscreen
          #   dimensions:
          #     aspect_ratio_mode: dynamic
          #     #aspect_ratio: '1/1'
          #   # live:
          #   #   webrtc_card:
          #   #     ui: true
          #   menu:
          #     style: none
          #   live:
          #     controls:
          #       thumbnails:
          #         mode: none
          #       title:
          #         mode: none
          #   card_mod:
          #     style: |
          #       :host {
          #         border-radius: var(--custom-button-card-border-radius);
          #       }

          # - type: custom:frigate-card
          #   cameras:
          #     - camera_entity: camera.garden_2
          #     # - camera_entity: camera.main_2
          #     #   live_provider: webrtc-card
          #     #   title: Front Door (WebRTC)
          #     #   webrtc_card:
          #     #     url: 'rtsp://homeassistant:pKP3wbpQVefjcS@192.168.2.48:554/h264Preview_01_main'
          #     #   id: front-door-webrtc
          #   view:
          #     default: live
          #     timeout_seconds: 0
          #     update_seconds: 0
          #     update_force: true
          #     actions:
          #       tap_action:
          #         action: custom:frigate-card-action
          #         frigate_card_action: fullscreen
          #   dimensions:
          #     aspect_ratio_mode: static
          #     aspect_ratio: '1/1'
          #   # live:
          #   #   webrtc_card:
          #   #     ui: true
          #   menu:
          #     style: none
          #   live:
          #     controls:
          #       thumbnails:
          #         mode: none
          #       title:
          #         mode: none
          #   card_mod:
          #     style:
          #       .: |
          #         ha-card {
          #           border-radius: 4.75% !important;
          #         }
          #         .container {
          #           border-radius: 4.75% !important;
          #         }

          - type: custom:button-card
            entity: camera.main_3
            #name: WejÅcie
            show_state: false
            template:
              - base
              - camera
            tap_action:
              !include popup/camera_main.yaml

          # - type: custom:button-card
          #   entity: camera.garage_3
          #   name: GaraÅ¼
          #   show_state: false
          #   template:
          #     - base
          #     - camera
          #   tap_action:
          #     !include popup/camera_garage.yaml

          # - type: custom:button-card
          #   entity: camera.garden_3
          #   name: OgrÃ³d
          #   show_state: false
          #   template:
          #     - base
          #     - camera
          #   tap_action:
          #     !include popup/camera_garden.yaml

          - type: custom:button-card
            entity: sensor.gabinet_temperature
            name: Temperatura
            tap_action: none
            state_display: >
              [[[ return '&nbsp;'; ]]]
            template:
              - base
              - full_circle
              - icon_temperature
              - graph
            custom_fields:
              graph:
                card:
                  entities:
                    - sensor.gabinet_temperature
            variables:
              circle_input: >
                [[[
                  let humidity = states['sensor.gabinet_humidity'];
                  if (humidity) return parseInt(humidity.state);
                ]]]
              circle_input_unit: '%'

          - type: custom:button-card
            #entity: alarm_control_panel.glowny_alarm
            entity: sensor.alarm_status
            name: Alarm
            tap_action:
              !include popup/alarm.yaml
            double_tap_action: none
            template:
              - base
              - icon_alarm
              #- marquee_state
            state:
              - value: 'arming'
                styles:
                  card:
                    - animation: blink 1s ease infinite
              - value: 'pending'
                styles:
                  card:
                    - animation: blink 1s ease infinite
              - value: 'triggered'
                styles:
                  card:
                    - animation: blink 1s ease infinite

          - type: custom:button-card
            entity: climate.living_room_ac
            name: Klima
            double_tap_action:
              !include popup/livingroom_ac.yaml
            template:
              - base
              - icon_ac
              - full_circle
              - loader
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    parseFloat(entity.attributes.current_temperature);
                ]]]

      #################################################
      #                                               #
      #                     MEDIA                     #
      #                                               #
      #################################################

      - type: grid
        title: Media
        view_layout:
          grid-area: media
        columns: 1
        cards:

          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:

              - type: vertical-stack
                cards:

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state_not: Plex
                      - entity: select.conditional_media
                        state_not: TV
                      - entity: select.conditional_media
                        state_not: KD-55XE9305
                      - entity: select.conditional_media
                        state_not: Sony Bravia TV
                      - entity: select.conditional_media
                        state_not: ChromecastAudio
                      - entity: select.conditional_media
                        state_not: Spotify
                      - entity: select.conditional_media
                        state_not: Google Nest Mini
                      - entity: select.conditional_media
                        state_not: Netflix on Shield
                    card:
                      type: custom:button-card
                      entity: sensor.plex_recently_added
                      name: Ostatnio dodane
                      tap_action:
                        action: none
                      template:
                        - conditional_media
                        - icon_plex

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Plex
                    card:
                      type: custom:button-card
                      entity: media_player.plex_plex_for_android_tv_shield_android_tv
                      template:
                        - conditional_media
                        - icon_plex

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: TV
                    card:
                      type: custom:button-card
                      entity: media_player.sony_kd_55xe9305
                      triggers_update: sensor.youtube_watching
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: KD-55XE9305
                    card:
                      type: custom:button-card
                      entity: media_player.kd_55xe9305
                      triggers_update: sensor.youtube_watching
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Sony Bravia TV
                    card:
                      type: custom:button-card
                      entity: media_player.sony_kd_55xe9305
                      triggers_update: sensor.youtube_watching
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: ChromecastAudio
                    card:
                      type: custom:button-card
                      entity: media_player.chromecastaudio
                      template:
                        - conditional_media
                        - icon_chromecast

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Spotify
                    card:
                      type: custom:button-card
                      entity: media_player.spotify_anarion
                      template:
                        - conditional_media
                        - icon_spotify

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Google Nest Mini
                    card:
                      type: custom:button-card
                      entity: media_player.nest_mini
                      template:
                        - conditional_media
                        - icon_nest_mini

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Netflix on Shield
                    card:
                      type: custom:button-card
                      entity: sensor.netflix_on_shield
                      template:
                        - conditional_media

              - type: grid
                columns: 2
                cards:

                  - type: custom:button-card
                    entity: media_player.plex_plex_for_android_tv_shield_android_tv
                    name: Plex
                    template:
                      - media
                      - icon_plex

                  - type: custom:button-card
                    name: ChromecastAudio
                    entity: media_player.chromecastaudio
                    template:
                      - media
                      - icon_chromecast

                  - type: custom:button-card
                    entity: media_player.spotify_anarion
                    name: Spotify
                    template:
                      - media
                      - icon_spotify

                  - type: custom:button-card
                    entity: media_player.nest_mini
                    name: Nest Mini
                    template:
                      - media
                      - icon_nest_mini

              - type: grid
                columns: 2
                cards:

                  - type: custom:button-card
                    entity: media_player.sony_kd_55xe9305
                    triggers_update: sensor.youtube_watching
                    name: TV
                    template:
                      - media
                      - icon_tv

                  - type: custom:button-card
                    name: TV
                    entity: media_player.kd_55xe9305
                    triggers_update: sensor.youtube_watching
                    template:
                      - media
                      - icon_tv



      #################################################
      #                                               #
      #                    other                      #
      #                                               #
      #################################################

      - type: grid
        title: Camera
        view_layout:
          grid-area: other
        columns: 1
        cards:

          - type: custom:frigate-card
            cameras:
              - camera_entity: camera.main_2
                live_provider: ha
              - camera_entity: camera.garage_2
                live_provider: ha
              - camera_entity: camera.garden_2
              - camera_entity: camera.main_2
                live_provider: webrtc-card
                title: Front Door (WebRTC)
                webrtc_card:
                  url: 'rtsp://homeassistant:pKP3wbpQVefjcS@192.168.2.48:554/h264Preview_01_main'
                id: front-door-webrtc
            view:
              # scan:
              #   enabled: false
              default: live
              timeout_seconds: 300
              update_seconds: 5
              update_force: false
              actions:
                double_tap_action:
                  action: custom:frigate-card-action
                  frigate_card_action: fullscreen
            dimensions:
              aspect_ratio_mode: unconstrained
              #aspect_ratio: '1/1'
            # live:
            #   webrtc_card:
            #     ui: true
            live:
              controls:
                thumbnails:
                  mode: none
                title:
                  mode: none
            card_mod:
              style: |
                :host {
                  border-radius: calc(var(--custom-button-card-border-radius) / 2);
                }


      # - type: grid
      #   title: Inne
      #   view_layout:
      #     grid-area: other
      #   columns: 1
      #   cards:
      #     # - type: custom:mod-card
      #     #   style:
      #     #     swipe-card:
      #     #       $: |
      #     #         .swiper-container {
      #     #           padding: 0px 0px 20px 0px !important;
      #     #         }
      #     #   card:
      #       - type: custom:swipe-card
      #         parameters:
      #           speed: 550
      #           spaceBetween: 40
      #           threshold: 5
      #         cards:

      #           - type: grid
      #             columns: 2
      #             cards:

      #               - type: custom:button-card
      #                 entity: switch.plex
      #                 name: Plex
      #                 tap_action:
      #                   action: toggle
      #                   entity: entity
      #                 template:
      #                   - media
      #                   - icon_plex

      #               - type: custom:button-card
      #                 entity: media_player.sony_kd_55xe9305
      #                 name: TV
      #                 tap_action:
      #                   action: toggle
      #                   entity: switch.tv
      #                 double_tap_action:
      #                   !include popup/vardagsrum_tv.yaml
      #                 template:
      #                   - base
      #                   - icon_tv
      #                   - loader
      #                   - media_source
      #                 variables:
      #                   circle: >
      #                     [[[
      #                       return entity === undefined ?
      #                         null :
      #                         entity.attributes.source;
      #                     ]]]

      #               - type: custom:button-card
      #                 entity: switch.radio
      #                 name: Radio
      #                 tap_action:
      #                   action: toggle
      #                   entity: entity
      #                 template:
      #                   - base
      #                   #- media
      #                   - icon_radio
      #                   - loader

      #               - type: custom:button-card
      #                 entity: switch.netflix
      #                 name: Netflix
      #                 tap_action:
      #                   action: toggle
      #                   entity: entity
      #                 template:
      #                   - media
      #                   - icon_netflix4
      #                   - loader

      #           - type: grid
      #             columns: 2
      #             cards:

      #               - type: custom:button-card
      #                 entity: switch.chromecast_audio
      #                 name: ChromecastAudio
      #                 tap_action:
      #                   action: toggle
      #                   entity: entity
      #                 template:
      #                   - base
      #                   #- media
      #                   - icon_chromecast
      #                   - loader

      #               # - type: custom:button-card
      #                 # entity: switch.tv
      #                 # name: TV
      #                 # template:
      #                   # - media
      #                   # - icon_tv
      #                   # - loader

      #               # - type: custom:button-card
      #                 # entity: switch.radio
      #                 # name: Radio
      #                 # template:
      #                   # - media
      #                   # - icon_radio
      #                   # - loader

      #               # - type: custom:button-card
      #                 # entity: switch.netflix
      #                 # name: Netflix
      #                 # template:
      #                   # - media
      #                   # - icon_netflix4
      #                   # - loader

      #################################################
      #                                               #
      #                     home                      #
      #                                               #
      #################################################

      - type: grid
        title: Dom
        view_layout:
          grid-area: home
        columns: 1
        cards:
          # - type: custom:mod-card
          #   style:
          #     swipe-card:
          #       $: |
          #         .swiper-container {
          #           padding: 0px 0px 20px 0px !important;
          #         }
          #   card:
            - type: custom:swipe-card
              start_card: 1
              parameters:
                roundLengths: true
                #autoHeight: false
                #height: 424px
                effect: coverflow
                speed: 650
                spaceBetween: 20
                threshold: 7
                coverflowEffect:
                  rotate: 80
                  depth: 300

              cards:
                - type: grid
                  columns: 2
                  cards:
                    - type: custom:button-card
                      entity: person.anarion
                      name: Anarion
                      triggers_update:
                        - sensor.anarion_last_changed
                      tap_action:
                        !include popup/home_anarion.yaml
                      template: person
                    - type: custom:button-card
                      entity: person.iwona
                      name: Iwona
                      triggers_update:
                        - sensor.iwona_last_changed
                      tap_action:
                        !include popup/home_iwona.yaml
                      template: person
                    - type: custom:button-card
                      entity: person.hania
                      name: Hania
                      tap_action:
                        !include popup/home_hania.yaml
                      template: person
                    # - type: custom:button-card
                      # entity: script.home_leave
                      # name: Close All
                      # double_tap_action:
                        # action: none
                      # template:
                        # - base
                        # - icon_away
                    - type: custom:button-card
                      entity: sensor.air_quality_level
                      name: Powietrze
                      #name: >
                      #  [[[ return `<marquee>${states['sensor.u_s_air_pollution_level'].state}<\marquee>`; ]]]
                      #state_display: >
                      #  [[[ return `<marquee behavior="scroll" scrollamount="4" hspace="5">${states['sensor.u_s_air_pollution_level'].state}<\marquee>`; ]]]
                      tap_action:
                        !include popup/aqi.yaml
                      template:
                        - base
                        - marquee_state
                        - icon_aqi
                        - full_circle
                      triggers_update:
                        - sensor.air_quality_level
                        - sensor.u_s_air_quality_index
                      # styles:
                      #   state:
                      #     - font-size: 1vw
                      variables:
                        circle_input: >
                          [[[
                            return entity === undefined ?
                              null :
                              parseInt(states['sensor.u_s_air_quality_index'].state);
                          ]]]
                        circle_color: rgba(0, 0, 0, 0.6)
                        circle_input_unit: ''
                - type: grid
                  columns: 2
                  cards:

                    - type: custom:button-card
                      entity: script.home_arrive
                      name: PowrÃ³t do domu
                      double_tap_action:
                        action: none
                      template:
                        - base
                        - icon_home


      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      # - type: horizontal-stack
      #   view_layout:
      #     grid-area: footer
      #   cards:
      #     - type: custom:button-card
      #       entity: sensor.stopa_bazowa_pko_bp
      #       name: "Stopa bazowa:"
      #       show_name: true
      #       show_state: true
      #       icon: >
      #           [[[ return (states['input_boolean.stopa_bazowa_rising'].state === 'on') ? 'mdi:trending-up' : 'mdi:trending-down'; ]]]
      #       tap_action:
      #         !include popup/finance.yaml
      #       template: icon_name_footer
      #       styles:
      #         icon:
      #           - color: >
      #                [[[ return (states['input_boolean.stopa_bazowa_rising'].state === 'on') ? 'red' : 'green'; ]]]
      #     - type: custom:button-card
      #       entity: sensor.wibor_6m
      #       name: "Wibor 6M:"
      #       show_name: true
      #       show_state: true
      #       icon: >
      #           [[[ return (states['input_boolean.wibor6m_rising'].state === 'on') ? 'mdi:trending-up' : 'mdi:trending-down'; ]]]
      #       tap_action:
      #         !include popup/finance.yaml
      #       template: icon_name_footer
      #       styles:
      #         icon:
      #           - color: >
      #                [[[ return (states['input_boolean.wibor6m_rising'].state === 'on') ? 'red' : 'green'; ]]]
      #     - type: custom:button-card
      #       entity: sensor.covid19_infections
      #       show_name: false
      #       show_state: true
      #       show_icon: true
      #       icon: mdi:virus
      #       template: icon_name_footer
      #     - type: custom:button-card
      #       entity: sensor.covid19_deaths
      #       show_name: false
      #       show_state: true
      #       show_icon: true
      #       icon: mdi:grave-stone
      #       template: icon_name_footer
      #     - type: custom:button-card
      #       entity: sensor.covid19_recovered
      #       show_name: false
      #       show_state: true
      #       show_icon: true
      #       icon: mdi:emoticon-happy
      #       template: icon_name_footer
      #       tap_action:
      #         !include popup/covid19.yaml

      - type: horizontal-stack
        view_layout:
          grid-area: footer
        cards:

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:nas"></ha-icon> Info
            tap_action:
              !include popup/footer_nas.yaml
            variables:
              notify: >
                [[[
                  let status = states['sensor.nas_volume_1_status'],
                    security = states['binary_sensor.nas_security_status'],
                    disk_use = states['sensor.disk_use_percent'],
                    nas_update = states['binary_sensor.nas_update_available'];
                  if (status && security && disk_use && nas_update) {
                    return nas_update.state === 'on'
                      ? 1
                      : status.state === 'background_scrubbing' ||
                        security.state === 'on' ||
                        parseFloat(disk_use.state) >= 85;
                  }
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Update
            tap_action:
              !include popup/footer_updates.yaml
            variables:
              notify: >
                [[[
                  let hass_installed = hass.config.version,
                    hass_version_latest = states['sensor.hass_version_latest'],
                    hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
                    hacs = states['sensor.hacs'];
                  if (hass_version_latest && hass_version_latest.state.includes('.')
                    && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
                    && hacs && Number.isInteger(parseInt(hacs.state))) {
                    let hass_latest = hass_installed.includes('b')
                        ? hass_version_latest_beta.state
                        : hass_version_latest.state,
                      hass_count = hass_installed !== hass_latest ? 1 : 0;
                    return hass_count + parseInt(hacs.state);
                  }
                  return 0;
                ]]]
            template: footer

          # - type: custom:button-card
          #   name: >
          #     <ha-icon icon="mdi:robot-vacuum-variant"></ha-icon> Odkurzacz
          #   tap_action:
          #     !include popup/footer_vacuum.yaml
          #   variables:
          #     notify: >
          #       [[[
          #         let last_clean = states['sensor.morty_last_clean_end'],
          #           week_ms = 6048e5;
          #         if (last_clean) {
          #           return (Date.now() - Date.parse(last_clean.state)) > week_ms;
          #         }
          #       ]]]
          #   template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:printer"></ha-icon> Drukarka
            tap_action:
              !include popup/footer_printer.yaml
            variables:
              notify: >
                [[[
                  let count = 0;
                  Object.keys(states).forEach(key => {
                    let s = states[key],
                        e = s.entity_id,
                        a = s.attributes;
                    if (e.includes('hp_officejet_pro') && a.marker_type === 'inkCartridge' && parseInt(s.state) < 30) {
                        count += 1;
                    }
                  })
                  return count;
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:chart-line-variant"></ha-icon> Historia
            tap_action:
              !include popup/footer_history.yaml
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:battery-charging-high"></ha-icon> Baterie
            tap_action:
              !include popup/footer_batteries.yaml
            variables:
              notify: >
                [[[
                  let count = 0;
                  Object.keys(states).forEach(key => {
                    let s = states[key],
                        e = s.entity_id,
                        a = s.attributes;
                    if ((e.includes('battery') && a.state_class === 'measurement' && a.device_class === 'battery' ||
                        (e.includes('battery_level') || e.includes('poziom_baterii')) && a.device_class === 'battery')
                        && parseInt(s.state) < 50) {
                        count += 1;
                    }
                  })
                  return count;
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:raspberry-pi"></ha-icon> Finanse
            tap_action:
              !include popup/footer_finance.yaml
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:cog-outline"></ha-icon>
            tap_action:
              !include popup/footer_settings.yaml
            template: footer