button_card_templates: !include button_card_templates.yaml

views:
  - type: custom:grid-layout
    path: 0
    layout:
      #default
      margin: 0
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .       .       ."
        "sidebar  living_room  studio  bedroom  ."
        "sidebar  media       other  home   ."
        "sidebar  footer      footer  footer  ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .        ."
            ".  sidebar     sidebar  ."
            ".  living_room  bedroom   ."
            ".  studio      other   ."
            ".  media       home    ."
            ".  footer      footer   ."
            ".  .           .        ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .       ."
            "sidebar  living_room  bedroom  ."
            "sidebar  studio      other  ."
            "sidebar  media       home   ."
            "sidebar  footer      footer  ."
            "sidebar  .           .       ."
    cards:
      - type: custom:button-card
        styles: #extra_styles fix
          card:
            - display: none
      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:button-card
            entity: sensor.template_sidebar
            name: '[[[ return entity.attributes.time; ]]]'
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.date;
                   ]]]
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.greet;
                   ]]]
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.active;
                   ]]]
            template: sidebar

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.open;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/doors.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.weather;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/weather.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.battery;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/batteries.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.calendar;
                   ]]]
            template: sidebar
            tap_action:
              !include popup/home_calendar.yaml

          - type: custom:button-card
            entity: sensor.template_sidebar
            name: >
               [[[
                   return entity.attributes.plex;
                   ]]]
            template: sidebar

          - type: conditional
            view_layout:
              grid-area: sidebar
            conditions:
              - entity: input_boolean.laundry_display
                state: 'on'
            card:
              type: custom:button-card
              entity: timer.laundry
              hold_action:
                action: call-service
                service: input_boolean.turn_off
                service_data:
                  entity_id: input_boolean.laundry_display
              template: laundry

          - type: grid
            view_layout:
              grid-area: sidebar
            cards:
              - type: button
                icon: mdi:robot-vacuum
                tap_action:
                  !include popup/sidebar_vacuum.yaml
                hold_action:
                  action: none
              - type: button
                icon: mdi:bell-circle-outline
                tap_action:
                  !include popup/history.yaml
                hold_action:
                  action: none

              - type: button
                icon: mdi:information-outline
                tap_action:
                  !include popup/sidebar_information.yaml
                hold_action:
                  action: none

              - type: button
                icon: mdi:arrow-up-bold-circle-outline
                tap_action:
                  !include popup/sidebar_update2.yaml
                hold_action:
                  action: none
                variables:
                  notify: >
                    [[[
                      let hass_installed = hass.config.version,
                        hass_version_latest = states['sensor.hass_version_latest'],
                        hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
                        hacs = states['sensor.hacs'];
                      if (hass_version_latest && hass_version_latest.state.includes('.')
                        && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
                        && hacs && Number.isInteger(parseInt(hacs.state))) {
                        let hass_latest = hass_installed.includes('b')
                            ? hass_version_latest_beta.state
                            : hass_version_latest.state,
                          hass_count = hass_installed !== hass_latest ? 1 : 0;
                        return hass_count + parseInt(hacs.state);
                      }
                      return 0;
                    ]]]

      #################################################
      #                                               #
      #                  living_room                  #
      #                                               #
      #################################################

      - type: grid
        title: Salon
        view_layout:
          grid-area: living_room
        columns: 2
        cards:
          - type: custom:button-card
            entity: sensor.ventilation_info
            name: Wentylacja
            tap_action:
              !include popup/ventilation.yaml
            template:
              - base
              - icon_fan
              - full_circle
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    `${parseInt(states['sensor.komfovent_extract_temperature_c'].state)}<tspan font-size="10">°C</tspan>`;
                ]]]
              speed: >
                [[[
                  return entity === undefined ?
                    null :
                    entity.state;
                ]]]

          - type: custom:button-card
            entity: fan.zhimi_airpurifier_v7
            name: Oczyszczacz powietrza
            hold_action:
              !include popup/sovrum_luftrenare.yaml
            template:
              - base
              - icon_air_purifier
              - full_circle
              - loader
            triggers_update:
              - sensor.airpurifier_pm2_5
              - fan.zhimi_airpurifier_v7
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    parseInt(states['sensor.airpurifier_pm2_5'].state);
                ]]]

          - type: custom:button-card
            entity: media_player.sony_bravia_tv
            name: TV
            state_display: >
              [[[
                if (variables.state === 'playing') {
                  return 'wł.';
                }
                if (variables.state === true) {
                  return variables.translate_unknown;
                }
              ]]]
            hold_action:
              !include popup/vardagsrum_tv.yaml
            template:
              - base
              - icon_tv
              - loader
              - media_source
            variables:
              circle: >
                [[[
                  return entity === undefined ?
                    null :
                    entity.attributes.source;
                ]]]

          - type: custom:button-card
            entity: sensor.komfovent_status_panel_temperature
            name: Temperatura
            hold_action: none
            tap_action:
              !include popup/salon_klimat.yaml
            custom_fields:
              graph:
                card:
                  entities:
                    - sensor.komfovent_status_panel_temperature
            template:
              - base
              - icon_temperature
              - humidity
              - graph
            extra_styles: >
              [[[
                if (entity) {
                  let hs = entity.attributes.hs_color === undefined,
                    h = hs || entity.attributes.hs_color[0],
                    s = hs || entity.attributes.hs_color[1],
                    l_min = 28,
                    l_max = 48,
                    l_calc = entity.attributes.brightness / 2.54 * (l_max - l_min) / 100 + l_min;
                  var light_color = entity.attributes.color_mode === 'color_temp' || entity.attributes.color_mode === 'brightness'
                    ? `hsl(204, 58%, ${l_calc}%);`
                    : `hsl(${h}, ${s}%, ${l_calc}%);`;
                }
                return `
                  svg {
                    --light-color:
                    ${ variables.state_on && entity.attributes.brightness !== undefined
                        ? light_color
                        : variables.state_on && entity.attributes.brightness === undefined
                          ? 'var(--state-icon-active-color);'
                          : 'var(--state-icon-color);'
                    }
                  }
                  #container {
                    text-align: left !important;
                  }
                  #name, #state {
                    font-size: 1.32vw;
                    letter-spacing: -0.02vw;
                  }
                  #state::first-letter {
                    text-transform: uppercase;
                  }
                  /* portrait */
                  @media screen and (max-width: 1200px) {
                    #name, #state {
                      font-size: 2vw;
                    }
                  }
                  /* phone */
                  @media screen and (max-width: 800px) {
                    #name, #state {
                      font-size: 3vw;
                    }
                  }
                  ${this._config.template.includes('footer') ? `
                    :host {
                      --name-font-size: 1.22vw;
                      --name-icon-size: 1.5vw;
                      --notify-font-size: 0.9vw;
                      --notify-box-size: 1.8vw;
                      --name-padding-v: 0.7vw;
                      --name-padding-h: 1.1vw;
                      --card-border-radius: 0.6vw;
                    }
                    #name {
                      font-size: var(--name-font-size);
                      padding: var(--name-padding-v) var(--name-padding-h);
                      letter-spacing: 0.012vw;
                    }
                    ha-icon {
                      width: var(--name-icon-size);
                      vertical-align: 7%;
                      padding-right: 0.1vw;
                      opacity: 0.4;
                    }
                    #card {
                      border-radius: var(--card-border-radius);
                      background: rgba(115, 115, 115, 0.04);
                    }
                    #notify {
                      font-size: var(--notify-font-size);
                      width: var(--notify-box-size);
                      height: var(--notify-box-size);
                      line-height: var(--notify-box-size);
                      padding-right: 0.5px;
                      padding-top: 0.5px;
                    }
                    /* portrait */
                    @media screen and (max-width: 1200px) {
                      #name {
                        font-size: calc(var(--name-font-size) * 1.4);
                        padding: calc(var(--name-padding-v) * 1.4) calc(var(--name-padding-h) * 1.4);
                      }
                      ha-icon {
                        width: calc(var(--name-icon-size) * 1.4);
                      }
                      #card {
                        border-radius: calc(var(--card-border-radius) * 1.4);
                        margin: 0 0.5vw;
                      }
                      #notify {
                        font-size: calc(var(--notify-font-size) * 1.4);
                        width: calc(var(--notify-box-size) * 1.4);
                        height: calc(var(--notify-box-size) * 1.4);
                        line-height: calc(var(--notify-box-size) * 1.4);
                      }
                    }
                    /* phone */
                    @media screen and (max-width: 800px) {
                      #name {
                        font-size: calc(var(--name-font-size) * 2.7);
                        padding: calc(var(--name-padding-v) * 2.7) calc(var(--name-padding-h) * 2.7);
                        letter-spacing: 0.12vw;
                      }
                      ha-icon {
                        width: calc(var(--name-icon-size) * 2.7);
                      }
                      #card {
                        border-radius: calc(var(--card-border-radius) * 2.7);
                        background: rgba(115, 115, 115, 0.08);
                        margin: 0 0.5vw;
                      }
                      #notify {
                        font-size: calc(var(--notify-font-size) * 2.7);
                        width: calc(var(--notify-box-size) * 2.7);
                        height: calc(var(--notify-box-size) * 2.7);
                        line-height: calc(var(--notify-box-size) * 2.7);
                        padding: 0;
                      }
                    }
                  `:''}
                `
              ]]]
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    parseFloat(states['sensor.komfovent_status_panel_humidity'].state);
                ]]]

          # - type: custom:button-card
          #   entity: climate.living_room_ac
          #   name: Klima
          #   hold_action:
          #     !include popup/livingroom_ac.yaml
          #   template:
          #     - base
          #     - icon_ac
          #     - full_circle
          #     - loader
          #   variables:
          #     circle_input: >
          #       [[[
          #         return entity === undefined ?
          #           null :
          #           parseFloat(entity.attributes.current_temperature);
          #       ]]]

      #################################################
      #                                               #
      #                    GABINET                    #
      #                                               #
      #################################################

      - type: grid
        title: Gabinet
        view_layout:
          grid-area: studio
        columns: 2
        cards:

          - type: custom:button-card
            entity: light.yeelight_hania
            name: U Hani
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: sensor.gabinet_temperature
            name: Temperatura
            hold_action: none
            tap_action:
              !include popup/gabinet_klimat.yaml
            custom_fields:
              graph:
                card:
                  entities:
                    - sensor.gabinet_temperature
              icon: >
                [[[
                if (entity.state != 'unavailable')
                {
                  var temp_color ="'#9da0a2";
                  if (entity.state >= '-10' && entity.state < 0) {
                    temp_color = "#0302FC";
                  } else if(entity.state >= '0' && entity.state < 12) {
                    temp_color = "#2A00D5";
                  } else if(entity.state >= '12' && entity.state < 22) {
                    temp_color = "#66ff66";
                  } else if(entity.state >= '22' && entity.state < 30) {
                    temp_color = "#008020";
                  } else if(entity.state >= '30' && entity.state < 35) {
                    temp_color = "#D80027";
                  } else if(entity.state >= '35' && entity.state < 40) {
                    temp_color = "#FE0002";
                  }
                  return `<svg viewBox="0 0 50 50" >
                    <path fill="#9da0a2" d="M16.3,33.6V6.4c0-2.6-2.2-4.8-4.8-4.8S6.7,3.8,6.7,6.4v27.1c-1.8,1.4-2.9,3.6-2.9,5.9c0,4.2,3.4,7.7,7.7,7.7
                      s7.6-3.4,7.6-7.7C19.1,37.2,18.1,35,16.3,33.6z M11.5,45.5c-3.3,0-6-2.7-6-6c0-2.1,1.1-4,2.9-5.1v-28c0-1.7,1.4-3.2,3.2-3.2
                      c1.7,0,3.2,1.4,3.2,3.2v28c1.7,1.1,2.9,3,2.9,5.1C17.5,42.9,14.8,45.5,11.5,45.5z"/>
                    <path fill="${temp_color}" d="M13,35.5v-11c0-0.8-0.7-1.5-1.5-1.5c-0.8,0-1.5,0.7-1.5,1.5v11c-1.7,0.6-2.9,2.2-2.9,4.1c0,2.4,2,4.4,4.4,4.4
                      s4.4-2,4.4-4.4C15.9,37.7,14.7,36.1,13,35.5z"/>
                    <rect fill="#9da0a2" x="18" y="6.5" width="7.8" height="1.6"/>
                    <rect fill="#9da0a2" x="18" y="12" width="3.7" height="1.6"/>
                    <rect fill="#9da0a2" x="18" y="17.4" width="7.8" height="1.6"/>
                    <rect fill="#9da0a2" x="18" y="22.8" width="3.7" height="1.6"/>
                    <rect fill="#9da0a2" x="18" y="28.2" width="7.8" height="1.6"/>
                    </svg>`;
                } ]]]
            template:
              - base
              - icon_temperature
              - humidity
              - graph
            extra_styles: >
              [[[
                if (entity) {
                  let hs = entity.attributes.hs_color === undefined,
                    h = hs || entity.attributes.hs_color[0],
                    s = hs || entity.attributes.hs_color[1],
                    l_min = 28,
                    l_max = 48,
                    l_calc = entity.attributes.brightness / 2.54 * (l_max - l_min) / 100 + l_min;
                  var light_color = entity.attributes.color_mode === 'color_temp' || entity.attributes.color_mode === 'brightness'
                    ? `hsl(204, 58%, ${l_calc}%);`
                    : `hsl(${h}, ${s}%, ${l_calc}%);`;
                }
                return `
                  svg {
                    --light-color:
                    ${ variables.state_on && entity.attributes.brightness !== undefined
                        ? light_color
                        : variables.state_on && entity.attributes.brightness === undefined
                          ? 'var(--state-icon-active-color);'
                          : 'var(--state-icon-color);'
                    }
                  }
                  #container {
                    text-align: left !important;
                  }
                  #name, #state {
                    font-size: 1.32vw;
                    letter-spacing: -0.02vw;
                  }
                  #state::first-letter {
                    text-transform: uppercase;
                  }
                  /* portrait */
                  @media screen and (max-width: 1200px) {
                    #name, #state {
                      font-size: 2vw;
                    }
                  }
                  /* phone */
                  @media screen and (max-width: 800px) {
                    #name, #state {
                      font-size: 3vw;
                    }
                  }
                  ${this._config.template.includes('footer') ? `
                    :host {
                      --name-font-size: 1.22vw;
                      --name-icon-size: 1.5vw;
                      --notify-font-size: 0.9vw;
                      --notify-box-size: 1.8vw;
                      --name-padding-v: 0.7vw;
                      --name-padding-h: 1.1vw;
                      --card-border-radius: 0.6vw;
                    }
                    #name {
                      font-size: var(--name-font-size);
                      padding: var(--name-padding-v) var(--name-padding-h);
                      letter-spacing: 0.012vw;
                    }
                    ha-icon {
                      width: var(--name-icon-size);
                      vertical-align: 7%;
                      padding-right: 0.1vw;
                      opacity: 0.4;
                    }
                    #card {
                      border-radius: var(--card-border-radius);
                      background: rgba(115, 115, 115, 0.04);
                    }
                    #notify {
                      font-size: var(--notify-font-size);
                      width: var(--notify-box-size);
                      height: var(--notify-box-size);
                      line-height: var(--notify-box-size);
                      padding-right: 0.5px;
                      padding-top: 0.5px;
                    }
                    /* portrait */
                    @media screen and (max-width: 1200px) {
                      #name {
                        font-size: calc(var(--name-font-size) * 1.4);
                        padding: calc(var(--name-padding-v) * 1.4) calc(var(--name-padding-h) * 1.4);
                      }
                      ha-icon {
                        width: calc(var(--name-icon-size) * 1.4);
                      }
                      #card {
                        border-radius: calc(var(--card-border-radius) * 1.4);
                        margin: 0 0.5vw;
                      }
                      #notify {
                        font-size: calc(var(--notify-font-size) * 1.4);
                        width: calc(var(--notify-box-size) * 1.4);
                        height: calc(var(--notify-box-size) * 1.4);
                        line-height: calc(var(--notify-box-size) * 1.4);
                      }
                    }
                    /* phone */
                    @media screen and (max-width: 800px) {
                      #name {
                        font-size: calc(var(--name-font-size) * 2.7);
                        padding: calc(var(--name-padding-v) * 2.7) calc(var(--name-padding-h) * 2.7);
                        letter-spacing: 0.12vw;
                      }
                      ha-icon {
                        width: calc(var(--name-icon-size) * 2.7);
                      }
                      #card {
                        border-radius: calc(var(--card-border-radius) * 2.7);
                        background: rgba(115, 115, 115, 0.08);
                        margin: 0 0.5vw;
                      }
                      #notify {
                        font-size: calc(var(--notify-font-size) * 2.7);
                        width: calc(var(--notify-box-size) * 2.7);
                        height: calc(var(--notify-box-size) * 2.7);
                        line-height: calc(var(--notify-box-size) * 2.7);
                        padding: 0;
                      }
                    }
                  `:''}
                `
              ]]]
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    parseFloat(states['sensor.gabinet_humidity'].state);
                ]]]

          - type: custom:button-card
            entity: switch.radio
            name: Radio
            hold_action:
              !include popup/studio_dator.yaml
            template:
              - base
              - icon_radio
              - loader
              - lock
            variables:
              lock: >
                [[[
                  let lock = states['lock.dator'];
                  return lock === undefined || lock.state;
                ]]]
              trigger: >
                [[[
                  let trigger = states['script.home_leave'];
                  return trigger === undefined || trigger;
                ]]]
          - type: custom:button-card
            entity: sensor.gabinet_temperature
            name: Temperatura
            hold_action: none
            tap_action:
              !include popup/gabinet_klimat.yaml
            custom_fields:
              graph:
                card:
                  entities:
                    - sensor.gabinet_temperature
            template:
              - base
              - icon_temperature
              - humidity
              - graph
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    parseFloat(states['sensor.gabinet_humidity'].state);
                ]]]

          # - type: custom:button-card
          #   #entity: switch.wemo_monitors
          #   entity: switch.flux
          #   name: Monitory
          #   triggers_update: sensor.monitors_volume
          #   hold_action:
          #     !include popup/studio_monitorer.yaml
          #   template:
          #     - base
          #     - icon_monitors
          #     - circle
          #     - loader
          #   variables:
          #     circle_input: >
          #       [[[
          #         let sensor = states['sensor.monitors_volume'];
          #         return sensor === undefined || sensor.state;
          #       ]]]

      #################################################
      #                                               #
      #                    SECURITY                   #
      #                                               #
      #################################################

      - type: grid
        title: Ochrona
        view_layout:
          grid-area: bedroom
        columns: 2
        cards:

          - type: custom:button-card
            entity: camera.main
            name: Wejście
            show_state: false
            template:
              - base
              - camera
            tap_action:
              !include popup/camera_main.yaml

          - type: custom:button-card
            entity: camera.garage
            name: Garaż
            show_state: false
            template:
              - base
              - camera
            tap_action:
              !include popup/camera_garage.yaml

          - type: custom:button-card
            entity: camera.garden
            name: Ogród
            show_state: false
            template:
              - base
              - camera
            tap_action:
              !include popup/camera_garden.yaml

          - type: custom:button-card
            #entity: alarm_control_panel.glowny_alarm
            entity: sensor.alarm_status
            name: Alarm
            tap_action:
              !include popup/alarm.yaml
            hold_action: none
            template:
              - base
              - icon_alarm
              #- marquee_state
            state:
              - value: 'arming'
                styles:
                  card:
                    - animation: blink 1s ease infinite
              - value: 'pending'
                styles:
                  card:
                    - animation: blink 1s ease infinite
              - value: 'triggered'
                styles:
                  card:
                    - animation: blink 1s ease infinite

      #################################################
      #                                               #
      #                     MEDIA                     #
      #                                               #
      #################################################

      - type: grid
        title: Media
        view_layout:
          grid-area: media
        columns: 1
        cards:

          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:

              - type: vertical-stack
                cards:

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state_not: Plex
                      - entity: select.conditional_media
                        state_not: TV
                      - entity: select.conditional_media
                        state_not: KD-55XE9305
                      - entity: select.conditional_media
                        state_not: Sony Bravia TV
                      - entity: select.conditional_media
                        state_not: ChromecastAudio
                      - entity: select.conditional_media
                        state_not: Spotify
                      - entity: select.conditional_media
                        state_not: Google Nest Mini
                    card:
                      type: custom:button-card
                      entity: sensor.plex_recently_added
                      name: Recently added
                      tap_action:
                        action: none
                      template:
                        - conditional_media
                        - icon_plex

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Plex
                    card:
                      type: custom:button-card
                      entity: media_player.plex_plex_for_android_tv_shield_android_tv
                      template:
                        - conditional_media
                        - icon_plex

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: TV
                    card:
                      type: custom:button-card
                      entity: media_player.sony_bravia_tv
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: KD-55XE9305
                    card:
                      type: custom:button-card
                      entity: media_player.kd_55xe9305
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Sony Bravia TV
                    card:
                      type: custom:button-card
                      entity: media_player.sony_bravia_tv
                      template:
                        - conditional_media
                        - icon_tv

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: ChromecastAudio
                    card:
                      type: custom:button-card
                      entity: media_player.chromecastaudio
                      template:
                        - conditional_media
                        - icon_chromecast

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Spotify
                    card:
                      type: custom:button-card
                      entity: media_player.spotify_anarion
                      template:
                        - conditional_media
                        - icon_spotify

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Google Nest Mini
                    card:
                      type: custom:button-card
                      entity: media_player.nest_mini
                      template:
                        - conditional_media
                        - icon_nest_mini

              - type: grid
                columns: 2
                cards:

                  - type: custom:button-card
                    entity: media_player.plex_plex_for_android_tv_shield_android_tv
                    name: Plex
                    template:
                      - media
                      - icon_plex

                  - type: custom:button-card
                    name: ChromecastAudio
                    entity: media_player.chromecastaudio
                    template:
                      - media
                      - icon_chromecast

                  - type: custom:button-card
                    entity: media_player.spotify_anarion
                    name: Spotify
                    template:
                      - media
                      - icon_spotify

                  - type: custom:button-card
                    entity: media_player.nest_mini
                    name: Nest Mini
                    template:
                      - media
                      - icon_nest_mini

              - type: grid
                columns: 2
                cards:

                  - type: custom:button-card
                    entity: media_player.sony_bravia_tv
                    name: TV
                    template:
                      - media
                      - icon_tv

                  - type: custom:button-card
                    name: TV
                    entity: media_player.kd_55xe9305
                    template:
                      - media
                      - icon_tv



      #################################################
      #                                               #
      #                    other                      #
      #                                               #
      #################################################

      - type: grid
        title: Inne
        view_layout:
          grid-area: other
        columns: 1
        cards:
          # - type: custom:mod-card
          #   style:
          #     swipe-card:
          #       $: |
          #         .swiper-container {
          #           padding: 0px 0px 20px 0px !important;
          #         }
          #   card:
            - type: custom:swipe-card
              parameters:
                speed: 550
                spaceBetween: 40
                threshold: 5
              cards:

                - type: grid
                  columns: 2
                  cards:

                    - type: custom:button-card
                      entity: switch.plex
                      name: Plex
                      tap_action:
                        action: toggle
                        entity: entity
                      template:
                        - media
                        - icon_plex

                    - type: custom:button-card
                      entity: media_player.sony_bravia_tv
                      name: TV
                      tap_action:
                        action: toggle
                        entity: switch.tv
                      hold_action:
                        !include popup/vardagsrum_tv.yaml
                      template:
                        - base
                        - icon_tv
                        - loader
                        - media_source
                      variables:
                        circle: >
                          [[[
                            return entity === undefined ?
                              null :
                              entity.attributes.source;
                          ]]]

                    - type: custom:button-card
                      entity: switch.radio
                      name: Radio
                      tap_action:
                        action: toggle
                        entity: entity
                      template:
                        - base
                        #- media
                        - icon_radio
                        - loader

                    - type: custom:button-card
                      entity: switch.netflix
                      name: Netflix
                      tap_action:
                        action: toggle
                        entity: entity
                      template:
                        - media
                        - icon_netflix4
                        - loader

                - type: grid
                  columns: 2
                  cards:

                    - type: custom:button-card
                      entity: switch.chromecast_audio
                      name: ChromecastAudio
                      tap_action:
                        action: toggle
                        entity: entity
                      template:
                        - media
                        - icon_chromecast
                        - loader

                    # - type: custom:button-card
                      # entity: switch.tv
                      # name: TV
                      # template:
                        # - media
                        # - icon_tv
                        # - loader

                    # - type: custom:button-card
                      # entity: switch.radio
                      # name: Radio
                      # template:
                        # - media
                        # - icon_radio
                        # - loader

                    # - type: custom:button-card
                      # entity: switch.netflix
                      # name: Netflix
                      # template:
                        # - media
                        # - icon_netflix4
                        # - loader

      #################################################
      #                                               #
      #                     home                      #
      #                                               #
      #################################################

      - type: grid
        title: Dom
        view_layout:
          grid-area: home
        columns: 1
        cards:
          # - type: custom:mod-card
          #   style:
          #     swipe-card:
          #       $: |
          #         .swiper-container {
          #           padding: 0px 0px 20px 0px !important;
          #         }
          #   card:
            - type: custom:swipe-card
              start_card: 1
              parameters:
                roundLengths: true
                #autoHeight: false
                #height: 424px
                effect: coverflow
                speed: 650
                spaceBetween: 20
                threshold: 7
                coverflowEffect:
                  rotate: 80
                  depth: 300

              cards:
                - type: grid
                  columns: 2
                  cards:
                    - type: custom:button-card
                      entity: person.anarion
                      name: Anarion
                      triggers_update:
                        - sensor.anarion_last_changed
                      tap_action:
                        !include popup/home_anarion.yaml
                      template: person
                    - type: custom:button-card
                      entity: person.iwona
                      name: Iwona
                      triggers_update:
                        - sensor.iwona_last_changed
                      tap_action:
                        !include popup/home_iwona.yaml
                      template: person
                    - type: custom:button-card
                      entity: person.hania
                      name: Hania
                      tap_action:
                        !include popup/home_hania.yaml
                      template: person
                    # - type: custom:button-card
                      # entity: script.home_leave
                      # name: Close All
                      # hold_action:
                        # action: none
                      # template:
                        # - base
                        # - icon_away
                    - type: custom:button-card
                      entity: sensor.air_quality_level
                      name: Powietrze
                      #name: >
                      #  [[[ return `<marquee>${states['sensor.u_s_air_pollution_level'].state}<\marquee>`; ]]]
                      #state_display: >
                      #  [[[ return `<marquee behavior="scroll" scrollamount="4" hspace="5">${states['sensor.u_s_air_pollution_level'].state}<\marquee>`; ]]]
                      tap_action:
                        !include popup/aqi.yaml
                      template:
                        - base
                        - marquee_state
                        - icon_aqi
                        - full_circle
                      triggers_update:
                        - sensor.air_quality_level
                        - sensor.u_s_air_quality_index
                      # styles:
                      #   state:
                      #     - font-size: 1vw
                      variables:
                        circle_input: >
                          [[[
                            return entity === undefined ?
                              null :
                              parseInt(states['sensor.u_s_air_quality_index'].state);
                          ]]]
                        circle_color: rgba(0, 0, 0, 0.6)
                - type: grid
                  columns: 2
                  cards:

                    - type: custom:button-card
                      entity: script.home_arrive
                      name: Powrót do domu
                      hold_action:
                        action: none
                      template:
                        - base
                        - icon_home


      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      # - type: markdown
        # view_layout:
          # grid-area: footer
        # content: >
          # {{ state_attr('sensor.template_coronavirus', 'template') }}
        # style: #force style - duplicate of themes markdown
          #  {.: "ha-card,ha-markdown{background:0 0;padding:0!important;pointer-events:none;margin-top:-1vw}ha-markdown{overflow:hidden}\n", ha-markdown$: "ha-markdown-element{opacity:.6;font-size:1.26vw;font-weight:400;--mdc-icon-size:1.2vw;font-family:SF Display;letter-spacing:.05vw;line-height:0;white-space:nowrap}ha-icon{vertical-align:3%;opacity:.4}@media screen and (max-width:800px){ha-markdown-element{display:none}}\n"}

      - type: horizontal-stack
        view_layout:
          grid-area: footer
        cards:
          - type: custom:button-card
            entity: sensor.stopa_bazowa_pko_bp
            name: "Stopa bazowa:"
            show_name: true
            show_state: true
            icon: >
                [[[ return (states['input_boolean.stopa_bazowa_rising'].state === 'on') ? 'mdi:trending-up' : 'mdi:trending-down'; ]]]
            tap_action:
              !include popup/finance.yaml
            template: icon_name_footer
            styles:
              icon:
                - color: >
                     [[[ return (states['input_boolean.stopa_bazowa_rising'].state === 'on') ? 'red' : 'green'; ]]]
          - type: custom:button-card
            entity: sensor.wibor_6m
            name: "Wibor 6M:"
            show_name: true
            show_state: true
            icon: >
                [[[ return (states['input_boolean.wibor6m_rising'].state === 'on') ? 'mdi:trending-up' : 'mdi:trending-down'; ]]]
            tap_action:
              !include popup/finance.yaml
            template: icon_name_footer
            styles:
              icon:
                - color: >
                     [[[ return (states['input_boolean.wibor6m_rising'].state === 'on') ? 'red' : 'green'; ]]]
          - type: custom:button-card
            entity: sensor.covid19_infections
            show_name: false
            show_state: true
            show_icon: true
            icon: mdi:virus
            template: icon_name_footer
          - type: custom:button-card
            entity: sensor.covid19_deaths
            show_name: false
            show_state: true
            show_icon: true
            icon: mdi:grave-stone
            template: icon_name_footer
          - type: custom:button-card
            entity: sensor.covid19_recovered
            show_name: false
            show_state: true
            show_icon: true
            icon: mdi:emoticon-happy
            template: icon_name_footer
            tap_action:
              !include popup/covid19.yaml